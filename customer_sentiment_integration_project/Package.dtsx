<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/21/2020 8:51:44 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-H3K5I2D"
  DTS:CreatorName="DESKTOP-H3K5I2D\suhail"
  DTS:DTSID="{B31CEA8C-83C5-4141-BE5B-1025EC8F2036}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.68"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="54"
  DTS:VersionGUID="{397630A6-3F13-470E-A24C-044D43676DB6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{758C56E5-E618-451B-9C86-D090B9210EFC}"
      DTS:ObjectName="CSV File Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varInFilePathFromInProc]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\customer_sentiment_integration\in_proc\">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{81711118-3FFE-443A-A081-84C57C2B295F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 1"
              DTS:DTSID="{22FAE9C7-7953-4EB9-845B-77E8BF4F50AA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 2"
              DTS:DTSID="{746ACDC2-1F52-4218-BD12-EBE30F971801}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 3"
              DTS:DTSID="{CB7A912E-08E3-4C08-85BF-5F87C452E9A1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 4"
              DTS:DTSID="{7B14BABB-7066-4F67-B75D-2B4AA2BD0139}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TestDB]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{0DFD625D-0FAF-4FC4-B926-ED4CEA5AD365}"
      DTS:ObjectName="LocalHost.TestDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SRVD075CSD01\RUCITPS;User ID=user.webstg;Initial Catalog=DoT_DB_Com;Persist Security Info=True;Application Name=SSIS-Package-{0DFD625D-0FAF-4FC4-B926-ED4CEA5AD365}LocalHost.TestDB;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAFamn+VX9m0uu/ir2KG+8wgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADmMfgQRLGuULg9zC+ZVylUSgbf5FacON2G4tgliXQk8wAAAAAOgAAAAAIAACAAAABW8ggvjU2c0Glu6SuQqUV+QhF/VQXaqWmehO8VSNzl0CAAAACJKeIz6yWxRCQDzV0sroowc4gWubpto0AdfEtSQSv950AAAABIj9fUebd8dKwA7zP1a4NvUdCl+abquTzWZqrc+p2r7Nk7k3L3dtCSzBZMAwATz6hhsktu4wP+OGzdVlIVpUAD</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{80B1505A-BEDE-4862-955F-81B9CF322C34}"
      DTS:ObjectName="LocalHost.TestDB.sa">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SRVD075CSD01\RUCITPS;User ID=user.webstg;Initial Catalog=DoT_DB_Com;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAFamn+VX9m0uu/ir2KG+8wgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAC8QlJgAyfIucyjgySp6MUC/OjUpydqYHCnDlPQ48Sx8QAAAAAOgAAAAAIAACAAAAA0ObcBJdVlm8FoZi+XxKKagLnYFQmo8QuGLOmfjuOu5CAAAACtxTm0XX1LcwcrIHEQr3rz+JiNUYG41nHRlI1nkIYrrEAAAABeSeLhGRyAAcpOzMqZ6BM1U75P0ig2ggkhFbdwx9j+i//SQABoKf5VE9Jawfv3lhXoBvjwPmGNYzX9DgcPHwi/</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEB65CAD-5E42-4E1D-BC79-1383EF4BC5AA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFolder]+ &quot;arch&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varArchFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\arch</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FF74C5A3-4AC6-4E2E-88F6-81449CF59523}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=SRVD075CSD01\\RUCITPS;User ID=user.webstg;password=Mw$asdzxc;Initial Catalog=DoT_DB_Com;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=SRVD075CSD01\RUCITPS;User ID=user.webstg;password=Mw$asdzxc;Initial Catalog=DoT_DB_Com;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F2C7D622-74E4-4906-A6FC-981A22140642}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="0"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDirectionOfFile">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C285346A-2BE9-4AE3-8898-C78531934000}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFolder] +&quot;err&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\err</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2651BFE-C5F0-41A3-AB48-C027335E49DA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFolder] +&quot;file_source&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileSourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\file_source</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D191D7B5-FA41-41F4-BFCC-E435A4504CB5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;D:\\customer_sentiment_integration\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A7986542-F00E-446C-92DF-636191439210}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varInCSVFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82FB2897-535E-453D-B96C-5B1DFE4095EE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varArchFolder]+&quot;\\&quot;+ @[User::varInCSVFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varInFilePathArch">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\arch\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4CC06B1-F853-4CD5-8CD6-6F454E78D858}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varErrFolder]+&quot;\\&quot;+ @[User::varInCSVFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varInFilePathErr">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\err\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4D2CC063-360E-4295-809E-7F4B1CED3B02}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varInProcFolder]+&quot;\\&quot;+ @[User::varInCSVFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varInFilePathFromInProc">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\in_proc\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7418C51-3158-4058-9D52-6BE47C2466D5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFileSourceFolder]+&quot;\\&quot;+ @[User::varInCSVFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varInFilePathFromSource">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\file_source\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C34A4ED-DADA-4FDD-8570-5E6BACD788B9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFolder] +&quot;in_proc&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varInProcFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\customer_sentiment_integration\in_proc</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{01B81E12-7E8E-42A2-814D-4FA12AFA7B2B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSentimentDateTime">
      <DTS:VariableValue
        DTS:DataType="7">2/21/2020 10:31:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{608B5035-DC22-4F54-AF5E-2CC329A82FB9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vartablename">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF7ABB74-8CB9-4458-8F53-FAD2DDFE8C3A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vartablevalue">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{E02A5E4B-530C-4612-A170-6D87DA906760}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{9905F59F-55A3-4C69-9C21-2A6E2696B64C}"
        DTS:ObjectName="{9905F59F-55A3-4C69-9C21-2A6E2696B64C}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::varFileSourceFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\customer_sentiment_integration\file_source" />
            <FEFEProperty
              FileSpec="*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Ingest The CSV File - Flow"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{795F49B7-6733-4984-A026-816520FD6D9F}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Ingest The CSV File - Flow"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check if record already exists"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[customers_sentiments_tbl]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[customers_sentiments_tbl]) [refTable]
where [refTable].[sentiment_datetime_fld] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="sentiment_datetime_fld" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="positive_fld" dataType="DT_NUMERIC" length="0" precision="10" scale="2" codePage="0"/&gt;&lt;referenceColumn name="negative_fld" dataType="DT_NUMERIC" length="0" precision="10" scale="2" codePage="0"/&gt;&lt;referenceColumn name="neutral_fld" dataType="DT_NUMERIC" length="0" precision="10" scale="2" codePage="0"/&gt;&lt;referenceColumn name="flg_fld" dataType="DT_STR" length="1" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column_Date]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Inputs[Lookup Input].Columns[Column_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column_Date]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">sentiment_datetime_fld</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Inputs[Conditional Split Input].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Case Insert]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case Insert"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]} == "I"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">[Column 4] == "I"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Case Update]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case Update"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]} == "U"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">[Column 4] == "U"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Convert To Integer 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Inputs[Data Conversion Input].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Inputs[Data Conversion Input].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Inputs[Data Conversion Input].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column1Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column1Numeric]"
                          name="Column1Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column2Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column2Numeric]"
                          name="Column2Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column3Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column3Numeric]"
                          name="Column3Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Data Already Exists Error"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    
    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {

        connMgr = this.Connections.ADOConnection;
        sqlConn = new SqlConnection(connMgr.ConnectionString);
    }
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        /*
         INSERT INTO [dbo].[sentiment_integration_err_tbl]
           ([filename_fld]
           ,[error_datetime_fld]
           ,[sentiment_datetime_fld]
           ,[positive_fld]
           ,[negative_fld]
           ,[neutral_fld]
           ,[flg_fld]
           ,[err_msg_fld])
     VALUES
           (<filename_fld, varchar(50),>
           ,<error_datetime_fld, datetime,>
           ,<sentiment_datetime_fld, datetime,>
           ,<positive_fld, numeric(10,2),>
           ,<negative_fld, numeric(10,2),>
           ,<neutral_fld, numeric(10,2),>
           ,<flg_fld, varchar(1),>
           ,<err_msg_fld, varchar(max),>)

         */
        sqlCmd = new SqlCommand("INSERT INTO [dbo].[sentiment_integration_err_tbl] ([filename_fld],[error_datetime_fld]," +
            "[sentiment_datetime_fld]" +
          ",[positive_fld],[negative_fld],[neutral_fld],[flg_fld],[err_msg_fld]) " +
          "VALUES(@filename_fld, @error_datetime_fld, @sentiment_datetime_fld,@positive_fld," +
          "@negative_fld,@neutral_fld,@flg_fld,@err_msg_fld)", sqlConn);
        sqlParam = new SqlParameter("@filename_fld", SqlDbType.VarChar,30);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@error_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@sentiment_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@positive_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@negative_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@neutral_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@flg_fld", SqlDbType.VarChar, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@err_msg_fld", SqlDbType.VarChar, 500);
        sqlCmd.Parameters.Add(sqlParam);

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "1";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        sqlConn.Open();
        try
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.ColumnDate;
            sqlCmd.Parameters["@positive_fld"].Value = Row.DataConversionColumn1Numeric;
            sqlCmd.Parameters["@negative_fld"].Value = Row.DataConversionColumn2Numeric;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.DataConversionColumn3Numeric;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr;
            sqlCmd.ExecuteNonQuery();
        }
        catch
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.ColumnDate;
            sqlCmd.Parameters["@positive_fld"].Value = Row.DataConversionColumn1Numeric;
            sqlCmd.Parameters["@negative_fld"].Value = Row.DataConversionColumn2Numeric;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.DataConversionColumn3Numeric;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr;
            sqlCmd.ExecuteNonQuery();


        }
        sqlConn.Close();
    }

    public override void ReleaseConnections()
    {
        
        connMgr.ReleaseConnection(sqlConn);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String FileNamecolumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool FileNamecolumn_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime CurrentDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[6]);
        }
    }
    public bool CurrentDateTime_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String CustomErrMessageColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool CustomErrMessageColumn_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String CustomErrMessageColumnstr
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool CustomErrMessageColumnstr_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public DateTime ColumnDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[9]);
        }
    }
    public bool ColumnDate_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Decimal DataConversionColumn1Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[10]);
        }
    }
    public bool DataConversionColumn1Numeric_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public Decimal DataConversionColumn2Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[11]);
        }
    }
    public bool DataConversionColumn2Numeric_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public Decimal DataConversionColumn3Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[12]);
        }
    }
    public bool DataConversionColumn3Numeric_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{4408C0FA-C009-4FD4-AC27-6CD5DDEC6362}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_32C6AF29D1224F3D9A887673ED3F037B</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_32C6AF29D1224F3D9A887673ED3F037B.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
IAEGAE4mAAAAAIYI/gWAAAYAWCYAAAAAhgDmC4AABgBgJgAAAACGANUKgAAGAGgmAAAAAIYYRwkG
AAYAiCYAAAAAxgB2CyUBBgCtJgAAAADGAW8LFQEKAMAmAAAAAMYBzwsVAQsAwiYAAAAAhhhHCS8B
DADRJgAAAACGCLQHpQANAPImAAAAAIYIogelAA0AEycAAAAAhhhHCS8BDQAiJwAAAACGCPsBGwAO
AEgnAAAAAIYIqQQbAA4AbicAAAAAhgi7BBAADgCLJwAAAACDGEcJBgAPAJMnAAAAAJMIqwg1AQ8A
vycAAAAAkwiAAjoBDwDGJwAAAACTCIwCPwEPAM4nAAAAAJYI4QpFARAA1ScAAAAAhhhHCQYAEADd
JwAAAACRGE0JSgEQAAAAAQBNBwAAAQDqCwAAAQCkCAAAAgBkCgAAAwAxCAAAAQARAQAAAgAQAgAA
AwCkCAAABAAxCAAAAQCkCAAAAQDqCwAAAQAnCwAAAQAnCwAAAQDHBAAAAQDHBAkARwkBABEARwkG
ABkARwkKACkARwkQADEARwkQADkARwkQAEEARwkQAEkARwkQAFEARwkQAFkARwkQAGEARwkQAGkA
RwkGAMkARwkGAOkARwkVAPkARwkGAHEA5wQbAHkARwkQAMEAiAQGAIEARwkfAIkARwkmAIEAvwov
AAkBpwE1AIkARwk8AMEAkwQGABEB3QYGAAkBwQZEABkBnwRKALEAxwtPACEB+wtUABEBwAIGAHEA
0wdKAJkARwlYAJkApAhiAJkAZApmAKEA/ARqAJkAsQZvAKEANQJ0AKEABgV6AJkA5guAAJkA1QqA
AMEARwkGACkBkgqEAMEAeAqMAJEARwkGAMEAJQGSADkBaweYAEEBGgKeAEkBvwilAMEATgqqAFEB
wQawAMEAsgu3AFkBgwu9AMEANwqqAFkBnwRKAHEB6QHEAHEB7gvNANEARwnTAPEARwkGAC4ACwB0
AS4AEwB9AS4AGwCcAS4AIwClAS4AKwDOAS4AMwDOAS4AOwDOAS4AQwClAS4ASwDUAS4AUwDOAS4A
WwDrAUMAYwA1AuMAawA1AmEBewA1AukDcwCcAQkEcwCcAQMAAQAFABsABgAdAAcAHwAIACEAAACs
AE4BAABTBVIBAAC4AE4BAABmBVIBAADEAE4BAAB5BVIBAADQAE4BAACMBVIBAADcAE4BAACfBVIB
AAAMB04BAAB9BlIBAABFAlYBAAAqBlIBAADxBk4BAABbBlIBAABYCU4BAACXBlIBAADKAlYBAABF
BlIBAABIAVsBAACyBVIBAABpAVsBAADaBVIBAACKAVsBAAACBlIBAAC4B2ABAACmB2ABAAD/AU4B
AAC/BE4BAACvCGUBAACgAmoBAADlCm8BAgAIAAMAAgAJAAUAAgAKAAcAAgALAAkAAgAMAAsAAgAN
AA0AAgAOAA8AAgAPABEAAgAQABMAAgARABUAAgASABcAAgATABkAAgAUABsAAgAVAB0AAgAWAB8A
AgAXACEAAgAYACMAAgAZACUAAgAaACcAAgAbACkAAgAcACsAAgAdAC0AAgAeAC8AAgAfADEAAgAg
ADMAAgAhADUAAgApADcAAgAqADkAAgAsADsAAgAtAD0AAQAuAD0AAgAwAD8AAgAxAEEAAQAyAEEA
AgAzAEMABIAAAAEAAAAAAAAAAAAAAAAA7QAAAAQAAAAAAAAAAAAAANsAOwEAAAAADwAAAAAAAAAA
AAAA5AAxCwAAAAAPAAAAAAAAAAAAAADkADsIAAAAAAQAAAAAAAAAAAAAANsAGQEAAAAADwAAAAAA
AAAAAAAA5ABOCwAAAAAEAAAAAAAAAAAAAADbAMoGAAAAAA8AAAAAAAAAAAAAAOQAXggAAAAAAAAA
AAEAAAC2CQAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRT
UnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJ
RFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29u
dGV4dDEwMABnZXRfQ29sdW1uMABnZXRfQ29sdW1uMQBnZXRfQ29sdW1uMgBnZXRfQ29sdW1uMwBn
ZXRfQ29sdW1uNAA8TW9kdWxlPgBTQ18zMkM2QUYyOUQxMjI0RjNEOUE4ODc2NzNFRDNGMDM3QgBJ
bnB1dElEAFN5c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBnZXRfRGF0
YUNvbnZlcnNpb25Db2x1bW4xTnVtZXJpYwBnZXRfRGF0YUNvbnZlcnNpb25Db2x1bW4yTnVtZXJp
YwBnZXRfRGF0YUNvbnZlcnNpb25Db2x1bW4zTnVtZXJpYwBBZGQAc3FsQ21kAERiQ29tbWFuZABT
cWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBnZXRfdmFySW5DU1ZGaWxlTmFtZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25C
eU5hbWUAR2V0RGF0ZVRpbWUAZ2V0X0N1cnJlbnREYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZQBTcWxEYlR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAGdldF9Db2x1bW5EYXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0
X1ZhbHVlAGdldF92YXJ0YWJsZXZhbHVlAHNldF92YXJ0YWJsZXZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAR2V0U3RyaW5nAEdldERlY2ltYWwAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDXzMyQzZBRjI5RDEyMjRGM0Q5QTg4NzY3M0VEM0YwMzdCLmRs
bABnZXRfQ29sdW1uMF9Jc051bGwAZ2V0X0NvbHVtbjFfSXNOdWxsAGdldF9Db2x1bW4yX0lzTnVs
bABnZXRfQ29sdW1uM19Jc051bGwAZ2V0X0NvbHVtbjRfSXNOdWxsAGdldF9EYXRhQ29udmVyc2lv
bkNvbHVtbjFOdW1lcmljX0lzTnVsbABnZXRfRGF0YUNvbnZlcnNpb25Db2x1bW4yTnVtZXJpY19J
c051bGwAZ2V0X0RhdGFDb252ZXJzaW9uQ29sdW1uM051bWVyaWNfSXNOdWxsAGdldF9DdXJyZW50
RGF0ZVRpbWVfSXNOdWxsAGdldF9Db2x1bW5EYXRlX0lzTnVsbABnZXRfQ3VzdG9tRXJyTWVzc2Fn
ZUNvbHVtbl9Jc051bGwAZ2V0X0ZpbGVOYW1lY29sdW1uX0lzTnVsbABnZXRfQ3VzdG9tRXJyTWVz
c2FnZUNvbHVtbnN0cl9Jc051bGwAc3FsUGFyYW0AZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFu
AE9wZW4AU2NyaXB0TWFpbgBnZXRfQ3VzdG9tRXJyTWVzc2FnZUNvbHVtbgBnZXRfRmlsZU5hbWVj
b2x1bW4Ac3FsQ29ubgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBU
cmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0
aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X09MRUNvbm5lY3Rpb24AZ2V0X0FET0Nvbm5l
Y3Rpb24ARGJDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24AU3lzdGVt
LkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABP
dXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3Fs
U2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0
QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZS5XcmFwcGVyAERiUGFyYW1ldGVyAFNxbFBhcmFtZXRlcgBjb25uTWdyAC5jdG9yAC5j
Y3RvcgBnZXRfQ3VzdG9tRXJyTWVzc2FnZUNvbHVtbnN0cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzk5YTkyNGU5
MmU3OTQ5ZGFhNDM5OTIzMjkwNTYzYzIwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBE
ZWJ1Z2dpbmdNb2RlcwBTQ185OWE5MjRlOTJlNzk0OWRhYTQzOTkyMzI5MDU2M2MyMC5Qcm9wZXJ0
aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQWNxdWlyZUNvbm5l
Y3Rpb25zAFJlbGVhc2VDb25uZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBPYmplY3QARW5kT2ZSb3dz
ZXQAZ2V0X0RlZmF1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50
Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFs
dWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29u
dGV4dABnZXRfTm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkA
RXhlY3V0ZU5vblF1ZXJ5AAAAgm9JAE4AUwBFAFIAVAAgAEkATgBUAE8AIABbAGQAYgBvAF0ALgBb
AHMAZQBuAHQAaQBtAGUAbgB0AF8AaQBuAHQAZQBnAHIAYQB0AGkAbwBuAF8AZQByAHIAXwB0AGIA
bABdACAAKABbAGYAaQBsAGUAbgBhAG0AZQBfAGYAbABkAF0ALABbAGUAcgByAG8AcgBfAGQAYQB0
AGUAdABpAG0AZQBfAGYAbABkAF0ALABbAHMAZQBuAHQAaQBtAGUAbgB0AF8AZABhAHQAZQB0AGkA
bQBlAF8AZgBsAGQAXQAsAFsAcABvAHMAaQB0AGkAdgBlAF8AZgBsAGQAXQAsAFsAbgBlAGcAYQB0
AGkAdgBlAF8AZgBsAGQAXQAsAFsAbgBlAHUAdAByAGEAbABfAGYAbABkAF0ALABbAGYAbABnAF8A
ZgBsAGQAXQAsAFsAZQByAHIAXwBtAHMAZwBfAGYAbABkAF0AKQAgAFYAQQBMAFUARQBTACgAQABm
AGkAbABlAG4AYQBtAGUAXwBmAGwAZAAsACAAQABlAHIAcgBvAHIAXwBkAGEAdABlAHQAaQBtAGUA
XwBmAGwAZAAsACAAQABzAGUAbgB0AGkAbQBlAG4AdABfAGQAYQB0AGUAdABpAG0AZQBfAGYAbABk
ACwAQABwAG8AcwBpAHQAaQB2AGUAXwBmAGwAZAAsAEAAbgBlAGcAYQB0AGkAdgBlAF8AZgBsAGQA
LABAAG4AZQB1AHQAcgBhAGwAXwBmAGwAZAAsAEAAZgBsAGcAXwBmAGwAZAAsAEAAZQByAHIAXwBt
AHMAZwBfAGYAbABkACkAABtAAGYAaQBsAGUAbgBhAG0AZQBfAGYAbABkAAAnQABlAHIAcgBvAHIA
XwBkAGEAdABlAHQAaQBtAGUAXwBmAGwAZAAAL0AAcwBlAG4AdABpAG0AZQBuAHQAXwBkAGEAdABl
AHQAaQBtAGUAXwBmAGwAZAAAG0AAcABvAHMAaQB0AGkAdgBlAF8AZgBsAGQAABtAAG4AZQBnAGEA
dABpAHYAZQBfAGYAbABkAAAZQABuAGUAdQB0AHIAYQBsAF8AZgBsAGQAABFAAGYAbABnAF8AZgBs
AGQAABlAAGUAcgByAF8AbQBzAGcAXwBmAGwAZAAAAzEAAA9JAG4AcAB1AHQAIAAwAAAbQQBEAE8A
QwBvAG4AbgBlAGMAdABpAG8AbgAAG08ATABFAEMAbwBuAG4AZQBjAHQAaQBvAG4AACF2AGEAcgBJ
AG4AQwBTAFYARgBpAGwAZQBOAGEAbQBlAAAbdgBhAHIAdABhAGIAbABlAHYAYQBsAHUAZQAAcVMA
QwBfADkAOQBhADkAMgA0AGUAOQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1
ADYAMwBjADIAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAJOHa
3/XBkUa+zkQrSBT0XwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcQMgAA4GIAIBDhI9CCADAQ4R
gIEIBSAAEoCFBiABEkUSRQcgAgEOEYCBBSABEkUOBCABARwEAAARWQMgAAgJIAMBElEdCBJVAwYS
UQMGHQgEIAEOCAQgAQIIBSABEVkIBSABEV0IAyAAAgcgAgIOEYCZBSABHQgIBSAAEoCdBSAAEoCh
BiABEoClDgQgABI5BSAAEoCpBiABEoCtHAUAABKAsQYgARwSgLUIAAESgLkRgL0FIAASgMEHIAIB
DhKAwQi3elxWGTTgiQiJhF3NgIDMkQMGEjkDBhI9AwYSQQMGEkUDBhIUAwYSGAMGEmEDBhJpAwYS
bQMGEiAFIAEBEgwEIAARWQQgABFdCSAEAQgOElESVQUgAQESYQQAABJpBAAAEm0FAAEBEm0EAAAS
IAMAAAEDKAAOAygAAgQoABFZBCgAEV0EKAASOQQIABJpBAgAEm0ECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOTlhOTI0ZTkyZTc5NDlk
YWE0Mzk5MjMyOTA1NjNjMjAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjcEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHRFAAAAAAAAAAAAAI5FAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACARQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA5
ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMA
YwAyADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMAMgBDADYAQQBGADIAOQBEADEA
MgAyADQARgAzAEQAOQBBADgAOAA3ADYANwAzAEUARAAzAEYAMAAzADcAQgAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMwAyAEMANgBBAEYA
MgA5AEQAMQAyADIANABGADMARAA5AEEAOAA4ADcANgA3ADMARQBEADMARgAwADMANwBCAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAOQBhADkAMgA0AGUA
OQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAoDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_32c6af29d1224f3d9a887673ed3f037b</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">17</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[FileName_column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FileName_column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[FileName_column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[CurrentDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CurrentDateTime"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[CurrentDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Custom_Err_Message_Column_str]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1500"
                          cachedName="Custom_Err_Message_Column_str"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Column_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column_Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Data Conversion.Column1Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column1Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column1Numeric]"
                          name="Data Conversion.Column1Numeric" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Data Conversion.Column2Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column2Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column2Numeric]"
                          name="Data Conversion.Column2Numeric" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0].Columns[Data Conversion.Column3Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column3Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column3Numeric]"
                          name="Data Conversion.Column3Numeric" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column_Date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column_Date]"
                          name="Column_Date"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column1Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column1Numeric]"
                          name="Column1Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column2Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column2Numeric]"
                          name="Column2Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column3Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column3Numeric]"
                          name="Column3Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date]"
                          name="Column_Date"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date1]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date1]"
                          name="Column_Date1"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column1Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column1Numeric]"
                          name="Column1Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column2Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column2Numeric]"
                          name="Column2Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column3Numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column3Numeric]"
                          name="Column3Numeric"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Data conversion Error"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    
    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {

        connMgr = this.Connections.ADOConnection;
        sqlConn = new SqlConnection(connMgr.ConnectionString);
    }
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        /*
         INSERT INTO [dbo].[sentiment_integration_err_tbl]
           ([filename_fld]
           ,[error_datetime_fld]
           ,[sentiment_datetime_fld]
           ,[positive_fld]
           ,[negative_fld]
           ,[neutral_fld]
           ,[flg_fld]
           ,[err_msg_fld])
     VALUES
           (<filename_fld, varchar(50),>
           ,<error_datetime_fld, datetime,>
           ,<sentiment_datetime_fld, datetime,>
           ,<positive_fld, numeric(10,2),>
           ,<negative_fld, numeric(10,2),>
           ,<neutral_fld, numeric(10,2),>
           ,<flg_fld, varchar(1),>
           ,<err_msg_fld, varchar(max),>)

         */
        sqlCmd = new SqlCommand("INSERT INTO [dbo].[sentiment_integration_err_tbl] ([filename_fld],[error_datetime_fld]," +
            "[sentiment_datetime_fld]" +
          ",[positive_fld],[negative_fld],[neutral_fld],[flg_fld],[err_msg_fld]) " +
          "VALUES(@filename_fld, @error_datetime_fld, @sentiment_datetime_fld,@positive_fld," +
          "@negative_fld,@neutral_fld,@flg_fld,@err_msg_fld)", sqlConn);
        sqlParam = new SqlParameter("@filename_fld", SqlDbType.VarChar,30);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@error_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@sentiment_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@positive_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@negative_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@neutral_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@flg_fld", SqlDbType.VarChar, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@err_msg_fld", SqlDbType.VarChar, 500);
        sqlCmd.Parameters.Add(sqlParam);

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "1";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        sqlConn.Open();
        try
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.Column0;
            sqlCmd.Parameters["@positive_fld"].Value = Row.Column1;
            sqlCmd.Parameters["@negative_fld"].Value = Row.Column2;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.Column3;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr;

            sqlCmd.ExecuteNonQuery();
        }
        catch (Exception ex)
        {

            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@positive_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@negative_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@neutral_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@flg_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr + "\n" + ex.Message.ToString();
            sqlCmd.ExecuteNonQuery();
        }
        finally {
            sqlConn.Close();
        }
    }

    public override void ReleaseConnections()
    {

        connMgr.ReleaseConnection(sqlConn);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[5]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String FileNamecolumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool FileNamecolumn_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public DateTime CurrentDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[8]);
        }
    }
    public bool CurrentDateTime_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String CustomErrMessageColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool CustomErrMessageColumn_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String CustomErrMessageColumnstr
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool CustomErrMessageColumnstr_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{A6776D04-E6C2-4CE6-A4EB-B0579B498C6B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_93E2ECEEA7CC4D558F60F5B66623C258</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_93E2ECEEA7CC4D558F60F5B66623C258.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
tQg6AQwAkSYAAAAAhggYB7UADQCyJgAAAACGCAYHtQANANMmAAAAAIYYtQg6AQ0A4iYAAAAAhgi7
ARsADgAIJwAAAACGCFoEGwAOAC4nAAAAAIYIbAQQAA4ASycAAAAAgxi1CAYADwBTJwAAAACTCBkI
QAEPAH8nAAAAAJMIQAJFAQ8AhicAAAAAkwhMAkoBDwCOJwAAAACWCFYKUAEQAJUnAAAAAIYYtQgG
ABAAnScAAAAAkRi7CFUBEAAAAAEAsQYAAAEAXwsAAAEAEggAAAIA0gkAAAMAnwcAAAEAGgEAAAIA
0AEAAAMAEggAAAQAnwcAAAEAEggAAAEAXwsAAAEAnAoAAAEAnAoAAAEAeAQAAAEAeAQJALUIAQAR
ALUIBgAZALUICgApALUIEAAxALUIEAA5ALUIEABBALUIEABJALUIEABRALUIEABZALUIEABhALUI
EABpALUIBgDJALUIBgDpALUIFQD5ALUIBgBxAJgEGwB5ALUIEADBADkEBgCBALUIHwCJALUIJgCB
AC0KLwAJAU0BNQCJALUIPADBAEQEBgARATEGBgAJARUGSQAZAVAETwC5ADwLVAAhAXALWQApAVQE
XQCZAIsBGwCRAK0EGwAxATwKYgARAYACBgBxADcHTwChALUIaQChABIIcwChANIJdwCpALYEewCh
AAUGgACpAMAAhQCpAPUBigChAFsLkAChAEoKkADBALUIBgAxAQAKlADBAOYJnACRALUIBgDBAC4B
ogBBAc8GqABJAdoBrgBRAS0ItQDBALwJugBZARUGwADBACcLxwBhAfgKzQDBAKUJugBhAVAETwB5
AakB1AB5AWML3QDRALUI4wDxALUIBgAuAAsAfgEuABMAhwEuABsApgEuACMArwEuACsA2AEuADMA
2AEuADsA2AEuAEMArwEuAEsA3gEuAFMA2AEuAFsA9QFDAGMAPwLjAGsAPwJhAXsAPwJpA3MApgGJ
A3MApgFEAAMAAQAFABcABgAZAAcAGwAIAB0AAACsAFkBAAAJBV0BAAC4AFkBAAAcBV0BAADNAFkB
AAAvBV0BAADZAFkBAABCBV0BAADlAFkBAABVBV0BAACBAWEBAABoBV0BAABgBmEBAAC6BV0BAABw
BlkBAADRBV0BAAAFAmUBAAB9BV0BAABFBlkBAACYBV0BAADGCFkBAADrBV0BAAAcB2oBAAAKB2oB
AAC/AVkBAABwBFkBAAAdCG8BAABgAnQBAABaCnkBAgAIAAMAAgAJAAUAAgAKAAcAAgALAAkAAgAM
AAsAAgANAA0AAgAOAA8AAgAPABEAAgAQABMAAgARABUAAgASABcAAgATABkAAgAUABsAAgAVAB0A
AgAWAB8AAgAXACEAAgAYACMAAgAZACUAAgAaACcAAgAbACkAAgAcACsAAgAdAC0AAgAlAC8AAgAm
ADEAAgAoADMAAgApADUAAQAqADUAAgAsADcAAgAtADkAAQAuADkAAgAvADsABIAAAAEAAAAAAAAA
AAAAAAAA7QAAAAQAAAAAAAAAAAAAAOsARAEAAAAADwAAAAAAAAAAAAAA9ACmCgAAAAAPAAAAAAAA
AAAAAAD0AKkHAAAAAAQAAAAAAAAAAAAAAOsAIgEAAAAADwAAAAAAAAAAAAAA9ADDCgAAAAAEAAAA
AAAAAAAAAADrAB4GAAAAAA8AAAAAAAAAAAAAAPQAzAcAAAAAAAAAAAEAAAAkCQAAAAAASURUU0Nv
bXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25D
b2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFn
ZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABnZXRfQ29sdW1u
MABnZXRfQ29sdW1uMQBHZXRJbnQzMgBnZXRfQ29sdW1uMgBnZXRfQ29sdW1uMwBnZXRfQ29sdW1u
NABTQ185M0UyRUNFRUE3Q0M0RDU1OEY2MEY1QjY2NjIzQzI1OAA8TW9kdWxlPgBJbnB1dElEAFN5
c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBBZGQAc3FsQ21kAERiQ29t
bWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfRXJyb3JDb2RlAGdldF9NZXNzYWdl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF92YXJJbkNTVkZpbGVOYW1l
AElucHV0TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBHZXREYXRlVGltZQBnZXRfQ3Vy
cmVudERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNxbERiVHlwZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0
ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAZ2V0X3ZhcnRhYmxldmFsdWUAc2V0X3ZhcnRhYmxldmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBUb1N0cmlu
ZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzkzRTJFQ0VFQTdDQzRENTU4RjYw
RjVCNjY2MjNDMjU4LmRsbABEQk51bGwAZ2V0X0NvbHVtbjBfSXNOdWxsAGdldF9Db2x1bW4xX0lz
TnVsbABnZXRfQ29sdW1uMl9Jc051bGwAZ2V0X0NvbHVtbjNfSXNOdWxsAGdldF9Db2x1bW40X0lz
TnVsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABnZXRfQ3VycmVudERhdGVUaW1lX0lzTnVsbABnZXRf
Q3VzdG9tRXJyTWVzc2FnZUNvbHVtbl9Jc051bGwAZ2V0X0Vycm9yQ29sdW1uX0lzTnVsbABnZXRf
RmlsZU5hbWVjb2x1bW5fSXNOdWxsAGdldF9DdXN0b21FcnJNZXNzYWdlQ29sdW1uc3RyX0lzTnVs
bABzcWxQYXJhbQBnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAGdl
dF9DdXN0b21FcnJNZXNzYWdlQ29sdW1uAGdldF9FcnJvckNvbHVtbgBnZXRfRmlsZU5hbWVjb2x1
bW4Ac3FsQ29ubgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBUcmFu
c2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9u
AFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X09MRUNvbm5lY3Rpb24AZ2V0X0FET0Nvbm5lY3Rp
b24ARGJDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9u
AFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5h
bWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVy
AFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAY29ubk1ncgAu
Y3RvcgAuY2N0b3IAZ2V0X0N1c3RvbUVyck1lc3NhZ2VDb2x1bW5zdHIAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ185
OWE5MjRlOTJlNzk0OWRhYTQzOTkyMzI5MDU2M2MyMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU0NfOTlhOTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAu
UHJvcGVydGllcwBnZXRfUmVhZFdyaXRlVmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBC
dWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAEFjcXVp
cmVDb25uZWN0aW9ucwBSZWxlYXNlQ29ubmVjdGlvbnMAZ2V0X1BhcmFtZXRlcnMAQ29uY2F0AE9i
amVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNv
bXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nl
c3NJbnB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdl
dF9FdmFsdWF0b3JDb250ZXh0AGdldF9Ob3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93
AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAAIJvSQBOAFMARQBSAFQAIABJAE4AVABPACAA
WwBkAGIAbwBdAC4AWwBzAGUAbgB0AGkAbQBlAG4AdABfAGkAbgB0AGUAZwByAGEAdABpAG8AbgBf
AGUAcgByAF8AdABiAGwAXQAgACgAWwBmAGkAbABlAG4AYQBtAGUAXwBmAGwAZABdACwAWwBlAHIA
cgBvAHIAXwBkAGEAdABlAHQAaQBtAGUAXwBmAGwAZABdACwAWwBzAGUAbgB0AGkAbQBlAG4AdABf
AGQAYQB0AGUAdABpAG0AZQBfAGYAbABkAF0ALABbAHAAbwBzAGkAdABpAHYAZQBfAGYAbABkAF0A
LABbAG4AZQBnAGEAdABpAHYAZQBfAGYAbABkAF0ALABbAG4AZQB1AHQAcgBhAGwAXwBmAGwAZABd
ACwAWwBmAGwAZwBfAGYAbABkAF0ALABbAGUAcgByAF8AbQBzAGcAXwBmAGwAZABdACkAIABWAEEA
TABVAEUAUwAoAEAAZgBpAGwAZQBuAGEAbQBlAF8AZgBsAGQALAAgAEAAZQByAHIAbwByAF8AZABh
AHQAZQB0AGkAbQBlAF8AZgBsAGQALAAgAEAAcwBlAG4AdABpAG0AZQBuAHQAXwBkAGEAdABlAHQA
aQBtAGUAXwBmAGwAZAAsAEAAcABvAHMAaQB0AGkAdgBlAF8AZgBsAGQALABAAG4AZQBnAGEAdABp
AHYAZQBfAGYAbABkACwAQABuAGUAdQB0AHIAYQBsAF8AZgBsAGQALABAAGYAbABnAF8AZgBsAGQA
LABAAGUAcgByAF8AbQBzAGcAXwBmAGwAZAApAAAbQABmAGkAbABlAG4AYQBtAGUAXwBmAGwAZAAA
J0AAZQByAHIAbwByAF8AZABhAHQAZQB0AGkAbQBlAF8AZgBsAGQAAC9AAHMAZQBuAHQAaQBtAGUA
bgB0AF8AZABhAHQAZQB0AGkAbQBlAF8AZgBsAGQAABtAAHAAbwBzAGkAdABpAHYAZQBfAGYAbABk
AAAbQABuAGUAZwBhAHQAaQB2AGUAXwBmAGwAZAAAGUAAbgBlAHUAdAByAGEAbABfAGYAbABkAAAR
QABmAGwAZwBfAGYAbABkAAAZQABlAHIAcgBfAG0AcwBnAF8AZgBsAGQAAAMxAAADCgAAD0kAbgBw
AHUAdAAgADAAABtBAEQATwBDAG8AbgBuAGUAYwB0AGkAbwBuAAAbTwBMAEUAQwBvAG4AbgBlAGMA
dABpAG8AbgAAIXYAYQByAEkAbgBDAFMAVgBGAGkAbABlAE4AYQBtAGUAABt2AGEAcgB0AGEAYgBs
AGUAdgBhAGwAdQBlAABxUwBDAF8AOQA5AGEAOQAyADQAZQA5ADIAZQA3ADkANAA5AGQAYQBhADQA
MwA5ADkAMgAzADIAOQAwADUANgAzAGMAMgAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAACH2j2uzeabSKpCc0C8V2+QAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFx
AyAADgYgAgEOEj0IIAMBDhGAgQgFIAASgIUGIAESRRJFByACAQ4RgIEEBwESTQUgARJFDgQgAQEc
BAAAEV0DIAAIBAYSgJUGAAMODg4OCSADARJVHQgSWQMGElUDBh0IBCABDggEIAECCAQgAQgIBSAB
EV0IAyAAAgcgAgIOEYCdBSABHQgIBSAAEoChBSAAEoClBiABEoCpDgQgABI5BSAAEoCtBiABEoCx
HAUAABKAtQYgARwSgLkIAAESgL0RgMEFIAASgMUHIAIBDhKAxQi3elxWGTTgiQiJhF3NgIDMkQMG
EjkDBhI9AwYSQQMGEkUDBhIUAwYSGAMGEmEDBhJpAwYSbQMGEiAFIAEBEgwEIAARXQkgBAEIDhJV
ElkFIAEBEmEEAAASaQQAABJtBQABARJtBAAAEiADAAABAygADgMoAAIDKAAIBCgAEV0EKAASOQQI
ABJpBAgAEm0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU0NfOTlhOTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwRAAA
AAAAAAAAAACKRAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfEQAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA5
ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMA
YwAyADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADkAMwBFADIARQBDAEUARQBBADcA
QwBDADQARAA1ADUAOABGADYAMABGADUAQgA2ADYANgAyADMAQwAyADUAOAAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOQAzAEUAMgBFAEMA
RQBFAEEANwBDAEMANABEADUANQA4AEYANgAwAEYANQBCADYANgA2ADIAMwBDADIANQA4AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAOQBhADkAMgA0AGUA
OQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAnDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_93e2eceea7cc4d558f60f5b66623c258</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">30</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[FileName_column]"
                          cachedDataType="wstr"
                          cachedName="FileName_column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[FileName_column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[CurrentDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CurrentDateTime"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[CurrentDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="851"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0].Columns[Custom_Err_Message_Column_str]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1500"
                          cachedName="Custom_Err_Message_Column_str"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Data conversion Error 1"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    
    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {

        connMgr = this.Connections.ADOConnection;
        sqlConn = new SqlConnection(connMgr.ConnectionString);
    }
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        /*
         INSERT INTO [dbo].[sentiment_integration_err_tbl]
           ([filename_fld]
           ,[error_datetime_fld]
           ,[sentiment_datetime_fld]
           ,[positive_fld]
           ,[negative_fld]
           ,[neutral_fld]
           ,[flg_fld]
           ,[err_msg_fld])
     VALUES
           (<filename_fld, varchar(50),>
           ,<error_datetime_fld, datetime,>
           ,<sentiment_datetime_fld, datetime,>
           ,<positive_fld, numeric(10,2),>
           ,<negative_fld, numeric(10,2),>
           ,<neutral_fld, numeric(10,2),>
           ,<flg_fld, varchar(1),>
           ,<err_msg_fld, varchar(max),>)

         */
        sqlCmd = new SqlCommand("INSERT INTO [dbo].[sentiment_integration_err_tbl] ([filename_fld],[error_datetime_fld]," +
            "[sentiment_datetime_fld]" +
          ",[positive_fld],[negative_fld],[neutral_fld],[flg_fld],[err_msg_fld]) " +
          "VALUES(@filename_fld, @error_datetime_fld, @sentiment_datetime_fld,@positive_fld," +
          "@negative_fld,@neutral_fld,@flg_fld,@err_msg_fld)", sqlConn);
        sqlParam = new SqlParameter("@filename_fld", SqlDbType.VarChar,30);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@error_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@sentiment_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@positive_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@negative_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@neutral_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@flg_fld", SqlDbType.VarChar, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@err_msg_fld", SqlDbType.VarChar, 500);
        sqlCmd.Parameters.Add(sqlParam);

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "1";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        sqlConn.Open();
        try
        {

            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.Column0;
            sqlCmd.Parameters["@positive_fld"].Value = Row.Column1;
            sqlCmd.Parameters["@negative_fld"].Value = Row.Column2;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.Column3;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr;
            sqlCmd.ExecuteNonQuery();
        }
        catch (Exception ex)
        {

            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@positive_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@negative_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@neutral_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@flg_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@err_msg_fld"].Value = ex.Message.ToString();
            sqlCmd.ExecuteNonQuery();


        }
        finally
        {
            sqlConn.Close();
        }
    }

    public override void ReleaseConnections()
    {

        connMgr.ReleaseConnection(sqlConn);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[5]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String FileNamecolumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool FileNamecolumn_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public DateTime CurrentDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[8]);
        }
    }
    public bool CurrentDateTime_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String CustomErrMessageColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool CustomErrMessageColumn_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String CustomErrMessageColumnstr
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool CustomErrMessageColumnstr_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{A216C85C-A350-47F5-9C10-B4388CC9A395}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_6EB0EC7C22D24CD68C13A70C03FBE433</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6EB0EC7C22D24CD68C13A70C03FBE433.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
rgANAKImAAAAAIYIBgeuAA0AwyYAAAAAhhi1CDMBDQDSJgAAAACGCLsBGwAOAPgmAAAAAIYIWgQb
AA4AHicAAAAAhghsBBAADgA7JwAAAACDGLUIBgAPAEMnAAAAAJMIGQg5AQ8AbycAAAAAkwhAAj4B
DwB2JwAAAACTCEwCQwEPAH4nAAAAAJYITwpJARAAhScAAAAAhhi1CAYAEACNJwAAAACRGLsITgEQ
AAAAAQCxBgAAAQBYCwAAAQASCAAAAgDSCQAAAwCfBwAAAQAaAQAAAgDQAQAAAwASCAAABACfBwAA
AQASCAAAAQBYCwAAAQCVCgAAAQCVCgAAAQB4BAAAAQB4BAkAtQgBABEAtQgGABkAtQgKACkAtQgQ
ADEAtQgQADkAtQgQAEEAtQgQAEkAtQgQAFEAtQgQAFkAtQgQAGEAtQgQAGkAtQgGAMkAtQgGAOkA
tQgVAPkAtQgGAHEAmAQbAHkAtQgQAMEAOQQGAIEAtQgfAIkAtQgmAIEALQovAAkBTQE1AIkAtQg8
AMEARAQGABEBMQYGAAkBFQZJABkBUARPALkANQtUACEBaQtZACkBVARdAJkAiwEbAJEArQQbABEB
gAIGAHEANwdPAKEAtQhiAKEAEghsAKEA0glwAKkAtgR0AKEABQZ5AKkAwAB+AKkA9QGDAKEAVAuJ
AKEAQwqJAMEAtQgGADEBAAqNAMEA5gmVAJEAtQgGAMEALgGbAEEBzwahAEkB2gGnAFEBLQiuAMEA
vAmzAFkBFQa5AMEAIAvAAGEB8QrGAMEApQmzAGEBUARPAHkBqQHNAHkBXAvWANEAtQjcAPEAtQgG
AC4ACwB3AS4AEwCAAS4AGwCfAS4AIwCoAS4AKwDRAS4AMwDRAS4AOwDRAS4AQwCoAS4ASwDXAS4A
UwDRAS4AWwDuAUMAYwA4AuMAawA4AmEBewA4AmkDcwCfAYkDcwCfAUQAAwABAAUAFwAGABkABwAb
AAgAHQAAAKwAUgEAAAkFVgEAALgAUgEAABwFVgEAAM0AUgEAAC8FVgEAAP0AUgEAAEIFVgEAAAkB
UgEAAFUFVgEAAIEBWgEAAGgFVgEAAGAGWgEAALoFVgEAAHAGUgEAANEFVgEAAAUCXgEAAH0FVgEA
AEUGUgEAAJgFVgEAAMYIUgEAAOsFVgEAABwHYwEAAAoHYwEAAL8BUgEAAHAEUgEAAB0IaAEAAGAC
bQEAAFMKcgECAAgAAwACAAkABQACAAoABwACAAsACQACAAwACwACAA0ADQACAA4ADwACAA8AEQAC
ABAAEwACABEAFQACABIAFwACABMAGQACABQAGwACABUAHQACABYAHwACABcAIQACABgAIwACABkA
JQACABoAJwACABsAKQACABwAKwACAB0ALQACACUALwACACYAMQACACgAMwACACkANQABACoANQAC
ACwANwACAC0AOQABAC4AOQACAC8AOwAEgAAAAQAAAAAAAAAAAAAAAADVAAAABAAAAAAAAAAAAAAA
5ABEAQAAAAAPAAAAAAAAAAAAAADtAJ8KAAAAAA8AAAAAAAAAAAAAAO0AqQcAAAAABAAAAAAAAAAA
AAAA5AAiAQAAAAAPAAAAAAAAAAAAAADtALwKAAAAAAQAAAAAAAAAAAAAAOQAHgYAAAAADwAAAAAA
AAAAAAAA7QDMBwAAAAAAAAAAAQAAACQJAAAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJ
RFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVu
dGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMx
MDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0X0NvbHVtbjAAZ2V0X0NvbHVtbjEAR2V0SW50
MzIAZ2V0X0NvbHVtbjIAU0NfNkVCMEVDN0MyMkQyNENENjhDMTNBNzBDMDNGQkU0MzMAZ2V0X0Nv
bHVtbjMAZ2V0X0NvbHVtbjQAPE1vZHVsZT4ASW5wdXRJRABTeXN0ZW0uRGF0YQBnZXRfQ29tcG9u
ZW50TWV0YURhdGEAbXNjb3JsaWIAQWRkAHNxbENtZABEYkNvbW1hbmQAU3FsQ29tbWFuZABkZWZh
dWx0SW5zdGFuY2UAZ2V0X0Vycm9yQ29kZQBnZXRfTWVzc2FnZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBnZXRfdmFySW5DU1ZGaWxlTmFtZQBJbnB1dE5hbWUAR2V0UnVudGlt
ZUNvbm5lY3Rpb25CeU5hbWUAR2V0RGF0ZVRpbWUAZ2V0X0N1cnJlbnREYXRlVGltZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTcWxEYlR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1Zh
bHVlAGdldF92YXJ0YWJsZXZhbHVlAHNldF92YXJ0YWJsZXZhbHVlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTQ182RUIwRUM3QzIyRDI0Q0Q2OEMxM0E3MEMwM0ZCRTQzMy5kbGwAREJO
dWxsAGdldF9Db2x1bW4wX0lzTnVsbABnZXRfQ29sdW1uMV9Jc051bGwAZ2V0X0NvbHVtbjJfSXNO
dWxsAGdldF9Db2x1bW4zX0lzTnVsbABnZXRfQ29sdW1uNF9Jc051bGwAZ2V0X0Vycm9yQ29kZV9J
c051bGwAZ2V0X0N1cnJlbnREYXRlVGltZV9Jc051bGwAZ2V0X0N1c3RvbUVyck1lc3NhZ2VDb2x1
bW5fSXNOdWxsAGdldF9FcnJvckNvbHVtbl9Jc051bGwAZ2V0X0ZpbGVOYW1lY29sdW1uX0lzTnVs
bABnZXRfQ3VzdG9tRXJyTWVzc2FnZUNvbHVtbnN0cl9Jc051bGwAc3FsUGFyYW0AZ2V0X0l0ZW0A
U3lzdGVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBnZXRfQ3VzdG9tRXJyTWVzc2FnZUNv
bHVtbgBnZXRfRXJyb3JDb2x1bW4AZ2V0X0ZpbGVOYW1lY29sdW1uAHNxbENvbm4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0
aW9uAGdldF9PTEVDb25uZWN0aW9uAGdldF9BRE9Db25uZWN0aW9uAERiQ29ubmVjdGlvbgBSZWxl
YXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24A
U3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNy
b3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlw
ZWxpbmVXcmFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIARGJQYXJhbWV0ZXIAU3FsUGFyYW1ldGVyAGNvbm5NZ3IALmN0b3IALmNjdG9yAGdldF9DdXN0
b21FcnJNZXNzYWdlQ29sdW1uc3RyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfOTlhOTI0ZTkyZTc5NDlkYWE0Mzk5
MjMyOTA1NjNjMjAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDXzk5YTkyNGU5MmU3OTQ5ZGFhNDM5OTIzMjkwNTYzYzIwLlByb3BlcnRpZXMAZ2V0X1JlYWRX
cml0ZVZhcmlhYmxlcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBH
ZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBBY3F1aXJlQ29ubmVjdGlvbnMAUmVsZWFz
ZUNvbm5lY3Rpb25zAGdldF9QYXJhbWV0ZXJzAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVs
dABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2Ny
aXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNl
cnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABHZXRWYWx1ZVdpdGhDb250ZXh0
AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AGdldF9Ob3cA
SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVl
cnkAAAAAAIJvSQBOAFMARQBSAFQAIABJAE4AVABPACAAWwBkAGIAbwBdAC4AWwBzAGUAbgB0AGkA
bQBlAG4AdABfAGkAbgB0AGUAZwByAGEAdABpAG8AbgBfAGUAcgByAF8AdABiAGwAXQAgACgAWwBm
AGkAbABlAG4AYQBtAGUAXwBmAGwAZABdACwAWwBlAHIAcgBvAHIAXwBkAGEAdABlAHQAaQBtAGUA
XwBmAGwAZABdACwAWwBzAGUAbgB0AGkAbQBlAG4AdABfAGQAYQB0AGUAdABpAG0AZQBfAGYAbABk
AF0ALABbAHAAbwBzAGkAdABpAHYAZQBfAGYAbABkAF0ALABbAG4AZQBnAGEAdABpAHYAZQBfAGYA
bABkAF0ALABbAG4AZQB1AHQAcgBhAGwAXwBmAGwAZABdACwAWwBmAGwAZwBfAGYAbABkAF0ALABb
AGUAcgByAF8AbQBzAGcAXwBmAGwAZABdACkAIABWAEEATABVAEUAUwAoAEAAZgBpAGwAZQBuAGEA
bQBlAF8AZgBsAGQALAAgAEAAZQByAHIAbwByAF8AZABhAHQAZQB0AGkAbQBlAF8AZgBsAGQALAAg
AEAAcwBlAG4AdABpAG0AZQBuAHQAXwBkAGEAdABlAHQAaQBtAGUAXwBmAGwAZAAsAEAAcABvAHMA
aQB0AGkAdgBlAF8AZgBsAGQALABAAG4AZQBnAGEAdABpAHYAZQBfAGYAbABkACwAQABuAGUAdQB0
AHIAYQBsAF8AZgBsAGQALABAAGYAbABnAF8AZgBsAGQALABAAGUAcgByAF8AbQBzAGcAXwBmAGwA
ZAApAAAbQABmAGkAbABlAG4AYQBtAGUAXwBmAGwAZAAAJ0AAZQByAHIAbwByAF8AZABhAHQAZQB0
AGkAbQBlAF8AZgBsAGQAAC9AAHMAZQBuAHQAaQBtAGUAbgB0AF8AZABhAHQAZQB0AGkAbQBlAF8A
ZgBsAGQAABtAAHAAbwBzAGkAdABpAHYAZQBfAGYAbABkAAAbQABuAGUAZwBhAHQAaQB2AGUAXwBm
AGwAZAAAGUAAbgBlAHUAdAByAGEAbABfAGYAbABkAAARQABmAGwAZwBfAGYAbABkAAAZQABlAHIA
cgBfAG0AcwBnAF8AZgBsAGQAAAMxAAAPSQBuAHAAdQB0ACAAMAAAG0EARABPAEMAbwBuAG4AZQBj
AHQAaQBvAG4AABtPAEwARQBDAG8AbgBuAGUAYwB0AGkAbwBuAAAhdgBhAHIASQBuAEMAUwBWAEYA
aQBsAGUATgBhAG0AZQAAG3YAYQByAHQAYQBiAGwAZQB2AGEAbAB1AGUAAHFTAEMAXwA5ADkAYQA5
ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMAYwAyADAA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAFbTuZySQUNCko54DQPL
FKwABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEDIAAOBiACAQ4SPQggAwEOEYCBCAUgABKAhQYg
ARJFEkUHIAIBDhGAgQQHARJNBSABEkUOBCABARwEAAARXQMgAAgEBhKAlQkgAwESVR0IElkDBhJV
AwYdCAQgAQ4IBCABAggEIAEICAUgARFdCAMgAAIHIAICDhGAnQUgAR0ICAUgABKAoQUgABKApQYg
ARKAqQ4EIAASOQUgABKArQYgARKAsRwFAAASgLUGIAEcEoC5CAABEoC9EYDBBSAAEoDFByACAQ4S
gMUIt3pcVhk04IkIiYRdzYCAzJEDBhI5AwYSPQMGEkEDBhJFAwYSFAMGEhgDBhJhAwYSaQMGEm0D
BhIgBSABARIMBCAAEV0JIAQBCA4SVRJZBSABARJhBAAAEmkEAAASbQUAAQESbQQAABIgAwAAAQMo
AA4DKAACAygACAQoABFdBCgAEjkECAASaQQIABJtBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzk5YTkyNGU5MmU3OTQ5ZGFhNDM5OTIz
MjkwNTYzYzIwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAUEQAAAAAAAAAAAAAakQAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAFxEAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA5
ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMA
YwAyADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADYARQBCADAARQBDADcAQwAyADIA
RAAyADQAQwBEADYAOABDADEAMwBBADcAMABDADAAMwBGAEIARQA0ADMAMwAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANgBFAEIAMABFAEMA
NwBDADIAMgBEADIANABDAEQANgA4AEMAMQAzAEEANwAwAEMAMAAzAEYAQgBFADQAMwAzAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAOQBhADkAMgA0AGUA
OQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAfDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_6eb0ec7c22d24cd68c13a70c03fbe433</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">30</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[FileName_column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FileName_column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[FileName_column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[CurrentDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CurrentDateTime"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[CurrentDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="851"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0].Columns[Custom_Err_Message_Column_str]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1500"
                          cachedName="Custom_Err_Message_Column_str"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Error In CSV File Script Write To Err DB"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablename
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablename"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablename"].Value = value;
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    
    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {

        connMgr = this.Connections.ADOConnection;
        sqlConn = new SqlConnection(connMgr.ConnectionString);
    }
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        /*
         INSERT INTO [dbo].[sentiment_integration_err_tbl]
           ([filename_fld]
           ,[error_datetime_fld]
           ,[sentiment_datetime_fld]
           ,[positive_fld]
           ,[negative_fld]
           ,[neutral_fld]
           ,[flg_fld]
           ,[err_msg_fld])
     VALUES
           (<filename_fld, varchar(50),>
           ,<error_datetime_fld, datetime,>
           ,<sentiment_datetime_fld, datetime,>
           ,<positive_fld, numeric(10,2),>
           ,<negative_fld, numeric(10,2),>
           ,<neutral_fld, numeric(10,2),>
           ,<flg_fld, varchar(1),>
           ,<err_msg_fld, varchar(max),>)

         */
        sqlCmd = new SqlCommand("INSERT INTO [dbo].[sentiment_integration_err_tbl] ([filename_fld],[error_datetime_fld]," +
            "[sentiment_datetime_fld]" +
          ",[positive_fld],[negative_fld],[neutral_fld],[flg_fld],[err_msg_fld]) " +
          "VALUES(@filename_fld, @error_datetime_fld, @sentiment_datetime_fld,@positive_fld," +
          "@negative_fld,@neutral_fld,@flg_fld,@err_msg_fld)", sqlConn);
        sqlParam = new SqlParameter("@filename_fld", SqlDbType.VarChar,30);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@error_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@sentiment_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@positive_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@negative_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@neutral_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@flg_fld", SqlDbType.VarChar, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@err_msg_fld", SqlDbType.VarChar, 500);
        sqlCmd.Parameters.Add(sqlParam);

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "1";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        sqlConn.Open();
        sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
        sqlCmd.Parameters["@error_datetime_fld"].Value = Row.CurrentDateTime;
        sqlCmd.Parameters["@sentiment_datetime_fld"].Value = DBNull.Value;
        sqlCmd.Parameters["@positive_fld"].Value = DBNull.Value;
        sqlCmd.Parameters["@negative_fld"].Value = DBNull.Value;
        sqlCmd.Parameters["@neutral_fld"].Value = DBNull.Value;
        sqlCmd.Parameters["@flg_fld"].Value = DBNull.Value;
        sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr;
        sqlCmd.ExecuteNonQuery();
        sqlConn.Close();
    }

    public override void ReleaseConnections()
    {

        connMgr.ReleaseConnection(sqlConn);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn FlatFileSourceErrorOutputColumn
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool FlatFileSourceErrorOutputColumn_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String FileNamecolumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool FileNamecolumn_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public DateTime CurrentDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[4]);
        }
    }
    public bool CurrentDateTime_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String CustomErrMessageColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool CustomErrMessageColumn_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String CustomErrMessageColumnstr
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool CustomErrMessageColumnstr_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{D2362C8A-38A3-47D5-809D-F85A51BD2526}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_99a924e92e7949daa439923290563c20</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
oQDMAHQAoQCHBHkAoQDPAX4AmQAOC4QAmQAFCoQAwQB3CAYAMQHCCYgAwQCoCZAAkQB3CAYAwQDy
AJYAQQGbBpwASQGSAaIAUQHvB6kAwQB+Ca4AWQGyBbQAwQDiCrsAYQGzCsEAwQBnCa4AYQEqBEoA
eQFhAcgAeQEWC9EA0QB3CNcA8QB3CAYALgALAHwBLgATAIUBLgAbAKQBLgAjAK0BLgArANYBLgAz
ANYBLgA7ANYBLgBDAK0BLgBLANwBLgBTANYBLgBbAPMBQwBjAD0C4wBrAD0CYQF7AD0CiQJzAKQB
qQJzAKQBAwABAAUADwAGABEABwAUAAgAFgAAABgGUgEAAEMFVwEAAEUBWwEAANoEVwEAAAgGWwEA
ACwFVwEAADwGXwEAAG4FVwEAAN8BYwEAAO8EVwEAAO0FXwEAAAoFVwEAAIgIXwEAAIgFVwEAAOgG
aAEAANYGaAEAAHcBXwEAAMIBXwEAAEoEXwEAAN8HbQEAADoCcgEAABUKdwECAAgAAwACAAkABQAC
AAoABwACAAsACQACAAwACwACAA0ADQACAA4ADwACAA8AEQACABAAEwACABEAFQACABIAFwACABMA
GQACABQAGwACABUAHQACAB0AHwACAB4AIQACACAAIwACACEAJQABACIAJQACACMAJwABACQAJwAC
ACYAKQACACcAKwABACgAKwACACkALQAEgAAAAQAAAAAAAAAAAAAAAACoAAAABAAAAAAAAAAAAAAA
3wAIAQAAAAAPAAAAAAAAAAAAAADoAGEKAAAAAA8AAAAAAAAAAAAAAOgAawcAAAAABAAAAAAAAAAA
AAAA3wDmAAAAAAAPAAAAAAAAAAAAAADoAH4KAAAAAAQAAAAAAAAAAAAAAN8AuwUAAAAADwAAAAAA
AAAAAAAA6ACOBwAAAAAAAAAAAQAAAOYIAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURU
U1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRp
bWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVzMTAw
AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAFNDXzk5YTkyNGU5MmU3OTQ5ZGFhNDM5OTIzMjkwNTYz
YzIwAEdldEludDMyADxNb2R1bGU+AElucHV0SUQAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1l
dGFEYXRhAG1zY29ybGliAEFkZABzcWxDbWQARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVsdElu
c3RhbmNlAGdldF9FcnJvckNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
Z2V0X3ZhckluQ1NWRmlsZU5hbWUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1l
AGdldF92YXJ0YWJsZW5hbWUAc2V0X3ZhcnRhYmxlbmFtZQBHZXREYXRlVGltZQBnZXRfQ3VycmVu
dERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNxbERiVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQ
b3N0RXhlY3V0ZQBzZXRfVmFsdWUAZ2V0X3ZhcnRhYmxldmFsdWUAc2V0X3ZhcnRhYmxldmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBHZXRTdHJpbmcA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzk5YTkyNGU5MmU3OTQ5ZGFhNDM5OTIzMjkwNTYzYzIw
LmRsbABEQk51bGwAZ2V0X0Vycm9yQ29kZV9Jc051bGwAZ2V0X0N1cnJlbnREYXRlVGltZV9Jc051
bGwAZ2V0X0N1c3RvbUVyck1lc3NhZ2VDb2x1bW5fSXNOdWxsAGdldF9FcnJvckNvbHVtbl9Jc051
bGwAZ2V0X0ZsYXRGaWxlU291cmNlRXJyb3JPdXRwdXRDb2x1bW5fSXNOdWxsAGdldF9GaWxlTmFt
ZWNvbHVtbl9Jc051bGwAZ2V0X0N1c3RvbUVyck1lc3NhZ2VDb2x1bW5zdHJfSXNOdWxsAHNxbFBh
cmFtAGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AQmxvYkNvbHVt
bgBnZXRfQ3VzdG9tRXJyTWVzc2FnZUNvbHVtbgBnZXRfRXJyb3JDb2x1bW4AZ2V0X0ZsYXRGaWxl
U291cmNlRXJyb3JPdXRwdXRDb2x1bW4AZ2V0X0ZpbGVOYW1lY29sdW1uAHNxbENvbm4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AVHJhbnNhY3Rpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xs
ZWN0aW9uAGdldF9PTEVDb25uZWN0aW9uAGdldF9BRE9Db25uZWN0aW9uAERiQ29ubmVjdGlvbgBS
ZWxlYXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdD
b21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdy
YXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBh
cmFtZXRlcgBTcWxQYXJhbWV0ZXIAY29ubk1ncgAuY3RvcgAuY2N0b3IAZ2V0X0N1c3RvbUVyck1l
c3NhZ2VDb2x1bW5zdHIAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ185OWE5MjRlOTJlNzk0OWRhYTQzOTkyMzI5MDU2
M2MyMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfOTlh
OTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAuUHJvcGVydGllcwBnZXRfUmVhZFdyaXRlVmFy
aWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAEFjcXVpcmVDb25uZWN0aW9ucwBSZWxlYXNlQ29ubmVj
dGlvbnMAZ2V0X1BhcmFtZXRlcnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFN5c3Rl
bS5EYXRhLlNxbENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21w
b25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0
Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5wdXQwX1Byb2Nlc3NJ
bnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAAACCb0kATgBTAEUA
UgBUACAASQBOAFQATwAgAFsAZABiAG8AXQAuAFsAcwBlAG4AdABpAG0AZQBuAHQAXwBpAG4AdABl
AGcAcgBhAHQAaQBvAG4AXwBlAHIAcgBfAHQAYgBsAF0AIAAoAFsAZgBpAGwAZQBuAGEAbQBlAF8A
ZgBsAGQAXQAsAFsAZQByAHIAbwByAF8AZABhAHQAZQB0AGkAbQBlAF8AZgBsAGQAXQAsAFsAcwBl
AG4AdABpAG0AZQBuAHQAXwBkAGEAdABlAHQAaQBtAGUAXwBmAGwAZABdACwAWwBwAG8AcwBpAHQA
aQB2AGUAXwBmAGwAZABdACwAWwBuAGUAZwBhAHQAaQB2AGUAXwBmAGwAZABdACwAWwBuAGUAdQB0
AHIAYQBsAF8AZgBsAGQAXQAsAFsAZgBsAGcAXwBmAGwAZABdACwAWwBlAHIAcgBfAG0AcwBnAF8A
ZgBsAGQAXQApACAAVgBBAEwAVQBFAFMAKABAAGYAaQBsAGUAbgBhAG0AZQBfAGYAbABkACwAIABA
AGUAcgByAG8AcgBfAGQAYQB0AGUAdABpAG0AZQBfAGYAbABkACwAIABAAHMAZQBuAHQAaQBtAGUA
bgB0AF8AZABhAHQAZQB0AGkAbQBlAF8AZgBsAGQALABAAHAAbwBzAGkAdABpAHYAZQBfAGYAbABk
ACwAQABuAGUAZwBhAHQAaQB2AGUAXwBmAGwAZAAsAEAAbgBlAHUAdAByAGEAbABfAGYAbABkACwA
QABmAGwAZwBfAGYAbABkACwAQABlAHIAcgBfAG0AcwBnAF8AZgBsAGQAKQAAG0AAZgBpAGwAZQBu
AGEAbQBlAF8AZgBsAGQAACdAAGUAcgByAG8AcgBfAGQAYQB0AGUAdABpAG0AZQBfAGYAbABkAAAv
QABzAGUAbgB0AGkAbQBlAG4AdABfAGQAYQB0AGUAdABpAG0AZQBfAGYAbABkAAAbQABwAG8AcwBp
AHQAaQB2AGUAXwBmAGwAZAAAG0AAbgBlAGcAYQB0AGkAdgBlAF8AZgBsAGQAABlAAG4AZQB1AHQA
cgBhAGwAXwBmAGwAZAAAEUAAZgBsAGcAXwBmAGwAZAAAGUAAZQByAHIAXwBtAHMAZwBfAGYAbABk
AAADMQAAD0kAbgBwAHUAdAAgADAAABtBAEQATwBDAG8AbgBuAGUAYwB0AGkAbwBuAAAbTwBMAEUA
QwBvAG4AbgBlAGMAdABpAG8AbgAAIXYAYQByAEkAbgBDAFMAVgBGAGkAbABlAE4AYQBtAGUAABl2
AGEAcgB0AGEAYgBsAGUAbgBhAG0AZQAAG3YAYQByAHQAYQBiAGwAZQB2AGEAbAB1AGUAAHFTAEMA
XwA5ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2
ADMAYwAyADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAw05J
6+zg8UC/MoNziXc2vQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcQMgAA4GIAIBDhI9CCADAQ4R
gIEIBSAAEoCFBiABEkUSRQcgAgEOEYCBBSABEkUOBCABARwEBhKAkQMgAAgJIAMBElEdCBJVAwYS
UQMGHQgEIAEcCAQgAQIIBCABCAgEIAEOCAUgARFdCAMgAAIHIAICDhGAnQUgAR0ICAUgABKAoQUg
ABKApQYgARKAqQ4EIAASOQUgABKArQYgARKAsRwFAAASgLUGIAEcEoC5CAABEoC9EYDBBSAAEoDF
ByACAQ4SgMUIt3pcVhk04IkIiYRdzYCAzJEDBhI5AwYSPQMGEkEDBhJFAwYSFAMGEhgDBhJhAwYS
aQMGEm0DBhIgBSABARIMBCAAElkEIAARXQkgBAEIDhJRElUFIAEBEmEEAAASaQQAABJtBQABARJt
BAAAEiADAAABBCgAElkDKAACAygACAMoAA4EKAARXQQoABI5BAgAEmkECAASbQQIABIgCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ185OWE5MjRl
OTJlNzk0OWRhYTQzOTkyMzI5MDU2M2MyMAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNwQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA7EEAAAAAAAAAAAAABkIAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAPhBAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
OQA5AGEAOQAyADQAZQA5ADIAZQA3ADkANAA5AGQAYQBhADQAMwA5ADkAMgAzADIAOQAwADUANgAz
AGMAMgAwAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA5ADkAYQA5ADIANABlADkAMgBl
ADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMAYwAyADAALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADkAOQBhADkAMgA0
AGUAOQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA5ADkAYQA5ADIANABl
ADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMAYwAyADAAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAABgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_99a924e92e7949daa439923290563c20</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablename,User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">D6</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0].Columns[Flat File Source Error Output Column]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0].Columns[FileName_column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FileName_column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[FileName_column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0].Columns[CurrentDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CurrentDateTime"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[CurrentDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="828"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0].Columns[Custom_Err_Message_Column_str]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1500"
                          cachedName="Custom_Err_Message_Column_str"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Error in the Status Flag"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    
    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {

        connMgr = this.Connections.ADOConnection;
        sqlConn = new SqlConnection(connMgr.ConnectionString);
    }
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        /*
         INSERT INTO [dbo].[sentiment_integration_err_tbl]
           ([filename_fld]
           ,[error_datetime_fld]
           ,[sentiment_datetime_fld]
           ,[positive_fld]
           ,[negative_fld]
           ,[neutral_fld]
           ,[flg_fld]
           ,[err_msg_fld])
     VALUES
           (<filename_fld, varchar(50),>
           ,<error_datetime_fld, datetime,>
           ,<sentiment_datetime_fld, datetime,>
           ,<positive_fld, numeric(10,2),>
           ,<negative_fld, numeric(10,2),>
           ,<neutral_fld, numeric(10,2),>
           ,<flg_fld, varchar(1),>
           ,<err_msg_fld, varchar(max),>)

         */
        sqlCmd = new SqlCommand("INSERT INTO [dbo].[sentiment_integration_err_tbl] ([filename_fld],[error_datetime_fld]," +
            "[sentiment_datetime_fld]" +
          ",[positive_fld],[negative_fld],[neutral_fld],[flg_fld],[err_msg_fld]) " +
          "VALUES(@filename_fld, @error_datetime_fld, @sentiment_datetime_fld,@positive_fld," +
          "@negative_fld,@neutral_fld,@flg_fld,@err_msg_fld)", sqlConn);
        sqlParam = new SqlParameter("@filename_fld", SqlDbType.VarChar,30);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@error_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@sentiment_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@positive_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@negative_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@neutral_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@flg_fld", SqlDbType.VarChar, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@err_msg_fld", SqlDbType.VarChar, 500);
        sqlCmd.Parameters.Add(sqlParam);

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "1";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        sqlConn.Open();
        try
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = Row.CurrentDateTime;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.Column0;
            sqlCmd.Parameters["@positive_fld"].Value = Row.Column1Numeric;
            sqlCmd.Parameters["@negative_fld"].Value = Row.Column2Numeric;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.Column3Numeric;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumn + " \n The Flag Field is having a wrong value";
            sqlCmd.ExecuteNonQuery();
        }
        catch(Exception ex)
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = Row.CurrentDateTime;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.Column0;
            sqlCmd.Parameters["@positive_fld"].Value = Row.Column1Numeric;
            sqlCmd.Parameters["@negative_fld"].Value = Row.Column2Numeric;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.Column3Numeric;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumn + " \n The Flag Field is having a wrong value"+"\n"+ ex.Message.ToString();
            sqlCmd.ExecuteNonQuery();
            

        }
        finally {
            sqlConn.Close();
        }
    }

    public override void ReleaseConnections()
    {

        connMgr.ReleaseConnection(sqlConn);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String FileNamecolumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool FileNamecolumn_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime CurrentDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[6]);
        }
    }
    public bool CurrentDateTime_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String CustomErrMessageColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool CustomErrMessageColumn_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Decimal Column1Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[8]);
        }
    }
    public bool Column1Numeric_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public Decimal Column2Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[9]);
        }
    }
    public bool Column2Numeric_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Decimal Column3Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[10]);
        }
    }
    public bool Column3Numeric_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{47552A0D-FC30-4EE1-8AE7-EA843BB3DAEF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_280A370E6A984769B7234D46901B0974</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_280A370E6A984769B7234D46901B0974.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAAAMYA4AoyAQYAnSYAAAAAxgHZCiIBCgCwJgAAAADGATELIgELALImAAAAAIYYyAg8AQwAwSYA
AAAAhggrB7IADQDiJgAAAACGCBkHsgANAAMnAAAAAIYYyAg8AQ0AEicAAAAAhgjdARsADgA4JwAA
AACGCHwEGwAOAF4nAAAAAIYIjgQQAA4AeycAAAAAgxjICAYADwCDJwAAAACTCCwIQgEPAK8nAAAA
AJMIYgJHAQ8AticAAAAAkwhuAkwBDwC+JwAAAACWCEsKUgEQAMUnAAAAAIYYyAgGABAAzScAAAAA
kRjOCFcBEAAAAAEAxAYAAAEATAsAAAEAJQgAAAIAxwkAAAMAsgcAAAEAEQEAAAIA8gEAAAMAJQgA
AAQAsgcAAAEAJQgAAAEATAsAAAEAkQoAAAEAkQoAAAEAmgQAAAEAmgQJAMgIAQARAMgIBgAZAMgI
CgApAMgIEAAxAMgIEAA5AMgIEABBAMgIEABJAMgIEABRAMgIEABZAMgIEABhAMgIEABpAMgIBgDR
AMgIBgDxAMgIFQABAcgIBgBxALoEGwB5AMgIEADJAFsEBgCBAMgIHwCJAMgIJgCBACIKLwARAX0B
NQCJAMgIPADJAGYEBgAZAVQGBgARATgGSQAhAXIETwApATEKVAAxAV0LWgCZAK0BGwCRAM8EGwAp
ATEKXgAZAaICBgBxAEoHTwChAMgIZQChACUIbwChAMcJcwCpANgEdwChACgGfACpABcCgQCpAOIE
hwChAEgLjQChAD8KjQDJAMgIBgApAfUJkQDJANsJmQCRAMgIBgDJACUBnwBBAeIGpQBJAfwBqwBR
AUAIsgDJALEJtwBZATgGvQDJABwLxABhAe0KygDJAJoJtwBhAXIETwB5AcsB0QB5AVAL2gDZAMgI
4AD5AMgIBgAuAAsAgQEuABMAigEuABsAqQEuACMAsgEuACsA2wEuADMA2wEuADsA2wEuAEMAsgEu
AEsA4QEuAFMA2wEuAFsA+AFDAGMAQgLjAGsAQgJhAXsAQgJpA3MAqQGJA3MAqQFEAAMAAQAFABcA
BgAZAAcAGwAIAB0AAACsAFsBAAAvBV8BAAC4AFsBAABCBV8BAADEAFsBAABVBV8BAADQAFsBAABo
BV8BAAAAAVsBAAB7BV8BAACDBlsBAAAZBl8BAAAnAmMBAADcBV8BAABoBlsBAAD3BV8BAABIAWgB
AACOBV8BAABbAWgBAACoBV8BAABuAWgBAADCBV8BAAAvB20BAAAdB20BAADhAVsBAACSBFsBAAAw
CHIBAACCAncBAABPCnwBAgAIAAMAAgAJAAUAAgAKAAcAAgALAAkAAgAMAAsAAgANAA0AAgAOAA8A
AgAPABEAAgAQABMAAgARABUAAgASABcAAgATABkAAgAUABsAAgAVAB0AAgAWAB8AAgAXACEAAgAY
ACMAAgAZACUAAgAaACcAAgAbACkAAgAcACsAAgAdAC0AAgAlAC8AAgAmADEAAgAoADMAAgApADUA
AQAqADUAAgAsADcAAgAtADkAAQAuADkAAgAvADsABIAAAAEAAAAAAAAAAAAAAAAA2AAAAAQAAAAA
AAAAAAAAAOgAOwEAAAAADwAAAAAAAAAAAAAA8QCbCgAAAAAPAAAAAAAAAAAAAADxALwHAAAAAAQA
AAAAAAAAAAAAAOgAGQEAAAAADwAAAAAAAAAAAAAA8QC4CgAAAAAEAAAAAAAAAAAAAADoAEEGAAAA
AA8AAAAAAAAAAAAAAPEA3wcAAAAAAAAAAAEAAAAZCQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURh
dGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAA
SURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFy
aWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAGdldF9Db2x1bW4wAGdldF9Db2x1bW4x
AGdldF9Db2x1bW4yAGdldF9Db2x1bW4zAFNDXzI4MEEzNzBFNkE5ODQ3NjlCNzIzNEQ0NjkwMUIw
OTc0AGdldF9Db2x1bW40ADxNb2R1bGU+AElucHV0SUQAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVu
dE1ldGFEYXRhAG1zY29ybGliAGdldF9Db2x1bW4xTnVtZXJpYwBnZXRfQ29sdW1uMk51bWVyaWMA
Z2V0X0NvbHVtbjNOdW1lcmljAEFkZABzcWxDbWQARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVs
dEluc3RhbmNlAGdldF9NZXNzYWdlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AGdldF92YXJJbkNTVkZpbGVOYW1lAElucHV0TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFt
ZQBHZXREYXRlVGltZQBnZXRfQ3VycmVudERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlBpcGVsaW5lAFNxbERiVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1
cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAZ2V0X3ZhcnRhYmxl
dmFsdWUAc2V0X3ZhcnRhYmxldmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29u
bmVjdGlvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAR2V0RGVjaW1hbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU0NfMjgwQTM3MEU2QTk4NDc2OUI3MjM0RDQ2OTAxQjA5NzQuZGxsAGdldF9Db2x1
bW4wX0lzTnVsbABnZXRfQ29sdW1uMV9Jc051bGwAZ2V0X0NvbHVtbjJfSXNOdWxsAGdldF9Db2x1
bW4zX0lzTnVsbABnZXRfQ29sdW1uNF9Jc051bGwAZ2V0X0NvbHVtbjFOdW1lcmljX0lzTnVsbABn
ZXRfQ29sdW1uMk51bWVyaWNfSXNOdWxsAGdldF9Db2x1bW4zTnVtZXJpY19Jc051bGwAZ2V0X0N1
cnJlbnREYXRlVGltZV9Jc051bGwAZ2V0X0N1c3RvbUVyck1lc3NhZ2VDb2x1bW5fSXNOdWxsAGdl
dF9GaWxlTmFtZWNvbHVtbl9Jc051bGwAc3FsUGFyYW0AZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNl
TWFuAE9wZW4AU2NyaXB0TWFpbgBnZXRfQ3VzdG9tRXJyTWVzc2FnZUNvbHVtbgBnZXRfRmlsZU5h
bWVjb2x1bW4Ac3FsQ29ubgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBUcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xs
ZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X09MRUNvbm5lY3Rpb24AZ2V0X0FET0Nv
bm5lY3Rpb24ARGJDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhj
ZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91
dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFu
YWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAY29u
bk1ncgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ185OWE5MjRlOTJlNzk0OWRhYTQzOTkyMzI5
MDU2M2MyMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0Nf
OTlhOTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAuUHJvcGVydGllcwBnZXRfUmVhZFdyaXRl
VmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAEFjcXVpcmVDb25uZWN0aW9ucwBSZWxlYXNlQ29u
bmVjdGlvbnMAZ2V0X1BhcmFtZXRlcnMAQ29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVm
YXVsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQA
U2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABHZXRWYWx1ZVdpdGhDb250
ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0
MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAA
AACCb0kATgBTAEUAUgBUACAASQBOAFQATwAgAFsAZABiAG8AXQAuAFsAcwBlAG4AdABpAG0AZQBu
AHQAXwBpAG4AdABlAGcAcgBhAHQAaQBvAG4AXwBlAHIAcgBfAHQAYgBsAF0AIAAoAFsAZgBpAGwA
ZQBuAGEAbQBlAF8AZgBsAGQAXQAsAFsAZQByAHIAbwByAF8AZABhAHQAZQB0AGkAbQBlAF8AZgBs
AGQAXQAsAFsAcwBlAG4AdABpAG0AZQBuAHQAXwBkAGEAdABlAHQAaQBtAGUAXwBmAGwAZABdACwA
WwBwAG8AcwBpAHQAaQB2AGUAXwBmAGwAZABdACwAWwBuAGUAZwBhAHQAaQB2AGUAXwBmAGwAZABd
ACwAWwBuAGUAdQB0AHIAYQBsAF8AZgBsAGQAXQAsAFsAZgBsAGcAXwBmAGwAZABdACwAWwBlAHIA
cgBfAG0AcwBnAF8AZgBsAGQAXQApACAAVgBBAEwAVQBFAFMAKABAAGYAaQBsAGUAbgBhAG0AZQBf
AGYAbABkACwAIABAAGUAcgByAG8AcgBfAGQAYQB0AGUAdABpAG0AZQBfAGYAbABkACwAIABAAHMA
ZQBuAHQAaQBtAGUAbgB0AF8AZABhAHQAZQB0AGkAbQBlAF8AZgBsAGQALABAAHAAbwBzAGkAdABp
AHYAZQBfAGYAbABkACwAQABuAGUAZwBhAHQAaQB2AGUAXwBmAGwAZAAsAEAAbgBlAHUAdAByAGEA
bABfAGYAbABkACwAQABmAGwAZwBfAGYAbABkACwAQABlAHIAcgBfAG0AcwBnAF8AZgBsAGQAKQAA
G0AAZgBpAGwAZQBuAGEAbQBlAF8AZgBsAGQAACdAAGUAcgByAG8AcgBfAGQAYQB0AGUAdABpAG0A
ZQBfAGYAbABkAAAvQABzAGUAbgB0AGkAbQBlAG4AdABfAGQAYQB0AGUAdABpAG0AZQBfAGYAbABk
AAAbQABwAG8AcwBpAHQAaQB2AGUAXwBmAGwAZAAAG0AAbgBlAGcAYQB0AGkAdgBlAF8AZgBsAGQA
ABlAAG4AZQB1AHQAcgBhAGwAXwBmAGwAZAAAEUAAZgBsAGcAXwBmAGwAZAAAGUAAZQByAHIAXwBt
AHMAZwBfAGYAbABkAAADMQAAUyAACgAgAFQAaABlACAARgBsAGEAZwAgAEYAaQBlAGwAZAAgAGkA
cwAgAGgAYQB2AGkAbgBnACAAYQAgAHcAcgBvAG4AZwAgAHYAYQBsAHUAZQAAVSAACgAgAFQAaABl
ACAARgBsAGEAZwAgAEYAaQBlAGwAZAAgAGkAcwAgAGgAYQB2AGkAbgBnACAAYQAgAHcAcgBvAG4A
ZwAgAHYAYQBsAHUAZQAKAAAPSQBuAHAAdQB0ACAAMAAAG0EARABPAEMAbwBuAG4AZQBjAHQAaQBv
AG4AABtPAEwARQBDAG8AbgBuAGUAYwB0AGkAbwBuAAAhdgBhAHIASQBuAEMAUwBWAEYAaQBsAGUA
TgBhAG0AZQAAG3YAYQByAHQAYQBiAGwAZQB2AGEAbAB1AGUAAHFTAEMAXwA5ADkAYQA5ADIANABl
ADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMAYwAyADAALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAwy62VBkGw0m5ZihZFwA7QgAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERdQMgAA4GIAIBDhI9CCADAQ4RgIUIBSAAEoCJBiABEkUS
RQcgAgEOEYCFBAcBEk0FIAESRQ4EIAEBHAUAAg4ODgMgAAgGAAMODg4OCSADARJVHQgSWQMGElUD
Bh0IBCABDggEIAECCAUgARFdCAUgARFhCAMgAAIHIAICDhGAnQUgAR0ICAUgABKAoQUgABKApQYg
ARKAqQ4EIAASOQUgABKArQYgARKAsRwFAAASgLUGIAEcEoC5CAABEoC9EYDBBSAAEoDFByACAQ4S
gMUIt3pcVhk04IkIiYRdzYCAzJEDBhI5AwYSPQMGEkEDBhJFAwYSFAMGEhgDBhJlAwYSbQMGEnED
BhIgBSABARIMBCAAEV0EIAARYQkgBAEIDhJVElkFIAEBEmUEAAASbQQAABJxBQABARJxBAAAEiAD
AAABAygADgMoAAIEKAARXQQoABFhBCgAEjkECAASbQQIABJxBAgAEiAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzk5YTkyNGU5MmU3OTQ5ZGFh
NDM5OTIzMjkwNTYzYzIwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADhFAAAAAAAAAAAAAFJFAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABERQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA5
ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMA
YwAyADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADIAOAAwAEEAMwA3ADAARQA2AEEA
OQA4ADQANwA2ADkAQgA3ADIAMwA0AEQANAA2ADkAMAAxAEIAMAA5ADcANAAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMgA4ADAAQQAzADcA
MABFADYAQQA5ADgANAA3ADYAOQBCADcAMgAzADQARAA0ADYAOQAwADEAQgAwADkANwA0AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAOQBhADkAMgA0AGUA
OQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAZDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_280a370e6a984769b7234d46901b0974</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">E0</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[FileName_column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FileName_column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[FileName_column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[CurrentDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CurrentDateTime"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[CurrentDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Custom_Err_Message_Column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column1Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column1Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column1Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column2Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column2Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column2Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0].Columns[Column3Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column3Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output].Columns[Column3Numeric]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  localeId="1033"
                  name="Error in updating the record"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    
    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {

        connMgr = this.Connections.ADOConnection;
        sqlConn = new SqlConnection(connMgr.ConnectionString);
    }
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        /*
         INSERT INTO [dbo].[sentiment_integration_err_tbl]
           ([filename_fld]
           ,[error_datetime_fld]
           ,[sentiment_datetime_fld]
           ,[positive_fld]
           ,[negative_fld]
           ,[neutral_fld]
           ,[flg_fld]
           ,[err_msg_fld])
     VALUES
           (<filename_fld, varchar(50),>
           ,<error_datetime_fld, datetime,>
           ,<sentiment_datetime_fld, datetime,>
           ,<positive_fld, numeric(10,2),>
           ,<negative_fld, numeric(10,2),>
           ,<neutral_fld, numeric(10,2),>
           ,<flg_fld, varchar(1),>
           ,<err_msg_fld, varchar(max),>)

         */
        sqlCmd = new SqlCommand("INSERT INTO [dbo].[sentiment_integration_err_tbl] ([filename_fld],[error_datetime_fld]," +
            "[sentiment_datetime_fld]" +
          ",[positive_fld],[negative_fld],[neutral_fld],[flg_fld],[err_msg_fld]) " +
          "VALUES(@filename_fld, @error_datetime_fld, @sentiment_datetime_fld,@positive_fld," +
          "@negative_fld,@neutral_fld,@flg_fld,@err_msg_fld)", sqlConn);
        sqlParam = new SqlParameter("@filename_fld", SqlDbType.VarChar,30);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@error_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@sentiment_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@positive_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@negative_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@neutral_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@flg_fld", SqlDbType.VarChar, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@err_msg_fld", SqlDbType.VarChar, 500);
        sqlCmd.Parameters.Add(sqlParam);

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "1";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        sqlConn.Open();
        try
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.ColumnDate;
            sqlCmd.Parameters["@positive_fld"].Value = Row.Column1Numeric;
            sqlCmd.Parameters["@negative_fld"].Value = Row.Column2Numeric;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.Column3Numeric;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.ErrorCode.ToString() + " \n " + Row.ErrorColumn.ToString() + " \n Update Sentiment has gone wrong";

            sqlCmd.ExecuteNonQuery();
        }
        catch (Exception ex)
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@positive_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@negative_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@neutral_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@flg_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.ErrorCode.ToString() + " \n " + Row.ErrorColumn.ToString() + " \n Update Sentiment has gone wrong" +
                " \n " + ex.Message.ToString();

            sqlCmd.ExecuteNonQuery();
        }
        finally {
            sqlConn.Close();
        }
    }

    public override void ReleaseConnections()
    {

       connMgr.ReleaseConnection(sqlConn);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Decimal Column1Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[5]);
        }
    }
    public bool Column1Numeric_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Decimal Column2Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
    }
    public bool Column2Numeric_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Decimal Column3Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[7]);
        }
    }
    public bool Column3Numeric_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public DateTime ColumnDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[8]);
        }
    }
    public bool ColumnDate_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[9]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[10]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{7FE4D549-21D4-4E9F-9D4D-CAB3D44474E2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_79C0A5F9F3264C9B9BED2862E52E2E65</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_79C0A5F9F3264C9B9BED2862E52E2E65.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AACGCGgGYgAGAHYmAAAAAIYIHAaeAAYAgCYAAAAAhgA2C54ABgCIJgAAAACGACUKngAGAJAmAAAA
AIYYrggGAAYAsCYAAAAAxgDGCkMBBgDVJgAAAADGAb8KMwEKAOgmAAAAAMYBHwszAQsA6iYAAAAA
hhiuCE0BDAD5JgAAAACGCBEHwwANABonAAAAAIYI/wbDAA0AOycAAAAAhhiuCE0BDQBKJwAAAACG
CPQBGwAOAHAnAAAAAIYIjgQbAA4AlicAAAAAhgigBBAADgCzJwAAAACDGK4IBgAPALsnAAAAAJMI
EghTAQ8A5ycAAAAAkwhlAlgBDwDuJwAAAACTCHECXQEPAPYnAAAAAJYIMQpjARAA/ScAAAAAhhiu
CAYAEAAFKAAAAACRGLQIaAEQAAAAAQCqBgAAAQA6CwAAAQALCAAAAgCtCQAAAwCYBwAAAQAaAQAA
AgAJAgAAAwALCAAABACYBwAAAQALCAAAAQA6CwAAAQB3CgAAAQB3CgAAAQCsBAAAAQCsBAkArggB
ABEArggGABkArggKACkArggQADEArggQADkArggQAEEArggQAEkArggQAFEArggQAFkArggQAGEA
rggQAGkArggGANEArggGAPEArggVAAEBrggGAHEAzAQbAHkArggQAMkAbQQGAIEArggfAIkArggm
AIEACAovABEBhgE1AIkArgg8AMkAeAQGABkBWAYGABEBPAZKACEBhARQAMEAFwtVACkB4QQbADEB
FwpaADkBSwtiAEEBiARmAJkAxAEbAJEA4QQbADEBFwprABkBpQIGAHEAMAdQAKEArghxAKEACwh7
AKEArQl/AKkA6gSDAKEALAaIAKkA9ASNAKkALgKTAKkAwACZAKEANgueAKEAJQqeAMkArggGADEB
2wmiAMkAwQmqAJEArggGAMkALgGwAFEByAa2AFkBEwK8AGEBJgjDAMkAlwnIAGkBPAbOAMkAAgvV
AHEB0wrbAMkAgAnIAHEBhARQAIkB4gHiAIkBPgvrANkArgjxAPkArggGAC4ACwCWAS4AEwCfAS4A
GwC+AS4AIwDHAS4AKwDwAS4AMwDwAS4AOwDwAS4AQwDHAS4ASwD2AS4AUwDwAS4AWwANAkMAYwBX
AuMAawBXAmEBewBXAmkDcwC+AYkDcwC+AUQAAwABAAUAFwAGABkABwAbAAgAHQAAAKwAbAEAAEgF
cAEAALgAbAEAAFsFcAEAAM0AbAEAAG4FcAEAANkAbAEAAIEFcAEAAOUAbAEAAJQFcAEAAFEBdAEA
AKcFcAEAAGQBdAEAAMEFcAEAAHcBdAEAANsFcAEAAK8CeQEAAAoGcAEAALoBfgEAAPUFcAEAAGwG
fgEAACAGcAEAABUHggEAAAMHggEAAPgBbAEAAKQEbAEAABYIhwEAAIUCjAEAADUKkQECAAgAAwAC
AAkABQACAAoABwACAAsACQACAAwACwACAA0ADQACAA4ADwACAA8AEQACABAAEwACABEAFQACABIA
FwACABMAGQACABQAGwACABUAHQACABYAHwACABcAIQACABgAIwACABkAJQACABoAJwACABsAKQAC
ABwAKwACAB0ALQACACUALwACACYAMQACACgAMwACACkANQABACoANQACACwANwACAC0AOQABAC4A
OQACAC8AOwAEgAAAAQAAAAAAAAAAAAAAAADtAAAABAAAAAAAAAAAAAAA+QBEAQAAAAAPAAAAAAAA
AAAAAAACAYEKAAAAAA8AAAAAAAAAAAAAAAIBogcAAAAABAAAAAAAAAAAAAAA+QAiAQAAAAAPAAAA
AAAAAAAAAAACAZ4KAAAAAAQAAAAAAAAAAAAAAPkARQYAAAAADwAAAAAAAAAAAAAAAgHFBwAAAAAA
AAAAAQAAAP8IAAAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAA
SURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24x
MDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRv
ckNvbnRleHQxMDAAZ2V0X0NvbHVtbjAAZ2V0X0NvbHVtbjEAR2V0SW50MzIAZ2V0X0NvbHVtbjIA
Z2V0X0NvbHVtbjMAZ2V0X0NvbHVtbjQAU0NfNzlDMEE1RjlGMzI2NEM5QjlCRUQyODYyRTUyRTJF
NjUAPE1vZHVsZT4ASW5wdXRJRABTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNj
b3JsaWIAZ2V0X0NvbHVtbjFOdW1lcmljAGdldF9Db2x1bW4yTnVtZXJpYwBnZXRfQ29sdW1uM051
bWVyaWMAQWRkAHNxbENtZABEYkNvbW1hbmQAU3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0
X0Vycm9yQ29kZQBnZXRfTWVzc2FnZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBnZXRfdmFySW5DU1ZGaWxlTmFtZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5h
bWUAR2V0RGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU3FsRGJUeXBl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBDbG9zZQBnZXRfQ29sdW1uRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQBnZXRfdmFydGFibGV2YWx1
ZQBzZXRfdmFydGFibGV2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGdldF9Db25uZWN0
aW9uU3RyaW5nAFRvU3RyaW5nAEdldFN0cmluZwBHZXREZWNpbWFsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTQ183OUMwQTVGOUYzMjY0QzlCOUJFRDI4NjJFNTJFMkU2NS5kbGwAREJOdWxsAGdldF9D
b2x1bW4wX0lzTnVsbABnZXRfQ29sdW1uMV9Jc051bGwAZ2V0X0NvbHVtbjJfSXNOdWxsAGdldF9D
b2x1bW4zX0lzTnVsbABnZXRfQ29sdW1uNF9Jc051bGwAZ2V0X0NvbHVtbjFOdW1lcmljX0lzTnVs
bABnZXRfQ29sdW1uMk51bWVyaWNfSXNOdWxsAGdldF9Db2x1bW4zTnVtZXJpY19Jc051bGwAZ2V0
X0Vycm9yQ29kZV9Jc051bGwAZ2V0X0NvbHVtbkRhdGVfSXNOdWxsAGdldF9FcnJvckNvbHVtbl9J
c051bGwAc3FsUGFyYW0AZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFp
bgBnZXRfRXJyb3JDb2x1bW4Ac3FsQ29ubgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBUcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5l
Y3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X09MRUNvbm5lY3Rpb24A
Z2V0X0FET0Nvbm5lY3Rpb24ARGJDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5l
Y3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1
cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVu
dGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAASW5wdXQwQnVmZmVy
AFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25u
ZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJh
bWV0ZXIAY29ubk1ncgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ185OWE5MjRlOTJlNzk0OWRh
YTQzOTkyMzI5MDU2M2MyMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU0NfOTlhOTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAuUHJvcGVydGllcwBnZXRf
UmVhZFdyaXRlVmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAEFjcXVpcmVDb25uZWN0aW9ucwBS
ZWxlYXNlQ29ubmVjdGlvbnMAZ2V0X1BhcmFtZXRlcnMAQ29uY2F0AE9iamVjdABFbmRPZlJvd3Nl
dABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRD
b21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWlj
cm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABHZXRWYWx1
ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250
ZXh0AGdldF9Ob3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBF
eGVjdXRlTm9uUXVlcnkAAACCb0kATgBTAEUAUgBUACAASQBOAFQATwAgAFsAZABiAG8AXQAuAFsA
cwBlAG4AdABpAG0AZQBuAHQAXwBpAG4AdABlAGcAcgBhAHQAaQBvAG4AXwBlAHIAcgBfAHQAYgBs
AF0AIAAoAFsAZgBpAGwAZQBuAGEAbQBlAF8AZgBsAGQAXQAsAFsAZQByAHIAbwByAF8AZABhAHQA
ZQB0AGkAbQBlAF8AZgBsAGQAXQAsAFsAcwBlAG4AdABpAG0AZQBuAHQAXwBkAGEAdABlAHQAaQBt
AGUAXwBmAGwAZABdACwAWwBwAG8AcwBpAHQAaQB2AGUAXwBmAGwAZABdACwAWwBuAGUAZwBhAHQA
aQB2AGUAXwBmAGwAZABdACwAWwBuAGUAdQB0AHIAYQBsAF8AZgBsAGQAXQAsAFsAZgBsAGcAXwBm
AGwAZABdACwAWwBlAHIAcgBfAG0AcwBnAF8AZgBsAGQAXQApACAAVgBBAEwAVQBFAFMAKABAAGYA
aQBsAGUAbgBhAG0AZQBfAGYAbABkACwAIABAAGUAcgByAG8AcgBfAGQAYQB0AGUAdABpAG0AZQBf
AGYAbABkACwAIABAAHMAZQBuAHQAaQBtAGUAbgB0AF8AZABhAHQAZQB0AGkAbQBlAF8AZgBsAGQA
LABAAHAAbwBzAGkAdABpAHYAZQBfAGYAbABkACwAQABuAGUAZwBhAHQAaQB2AGUAXwBmAGwAZAAs
AEAAbgBlAHUAdAByAGEAbABfAGYAbABkACwAQABmAGwAZwBfAGYAbABkACwAQABlAHIAcgBfAG0A
cwBnAF8AZgBsAGQAKQAAG0AAZgBpAGwAZQBuAGEAbQBlAF8AZgBsAGQAACdAAGUAcgByAG8AcgBf
AGQAYQB0AGUAdABpAG0AZQBfAGYAbABkAAAvQABzAGUAbgB0AGkAbQBlAG4AdABfAGQAYQB0AGUA
dABpAG0AZQBfAGYAbABkAAAbQABwAG8AcwBpAHQAaQB2AGUAXwBmAGwAZAAAG0AAbgBlAGcAYQB0
AGkAdgBlAF8AZgBsAGQAABlAAG4AZQB1AHQAcgBhAGwAXwBmAGwAZAAAEUAAZgBsAGcAXwBmAGwA
ZAAAGUAAZQByAHIAXwBtAHMAZwBfAGYAbABkAAADMQAAByAACgAgAABFIAAKACAAVQBwAGQAYQB0
AGUAIABTAGUAbgB0AGkAbQBlAG4AdAAgAGgAYQBzACAAZwBvAG4AZQAgAHcAcgBvAG4AZwAASyAA
CgAgAFUAcABkAGEAdABlACAAUwBlAG4AdABpAG0AZQBuAHQAIABoAGEAcwAgAGcAbwBuAGUAIAB3
AHIAbwBuAGcAIAAKACAAAA9JAG4AcAB1AHQAIAAwAAAbQQBEAE8AQwBvAG4AbgBlAGMAdABpAG8A
bgAAG08ATABFAEMAbwBuAG4AZQBjAHQAaQBvAG4AACF2AGEAcgBJAG4AQwBTAFYARgBpAGwAZQBO
AGEAbQBlAAAbdgBhAHIAdABhAGIAbABlAHYAYQBsAHUAZQAAcVMAQwBfADkAOQBhADkAMgA0AGUA
OQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAADRH0OnJZiHQ466OapgYIWFAAQg
AQEIAyAAAQUgAQEREQQgAQEOBSABARF1AyAADgYgAgEOEj0IIAMBDhGAhQgFIAASgIkGIAESRRJF
ByACAQ4RgIUFBwIIEk0FIAESRQ4EIAEBHAQAABFhBwAEDg4ODg4DIAAIBAYSgKEFAAEOHQ4JIAMB
ElUdCBJZAwYSVQMGHQgEIAEOCAQgAQIIBSABEV0IBSABEWEIBCABCAgDIAACByACAg4RgKUFIAEd
CAgFIAASgKkFIAASgK0GIAESgLEOBCAAEjkFIAASgLUGIAESgLkcBQAAEoC9BiABHBKAwQgAARKA
xRGAyQUgABKAzQcgAgEOEoDNCLd6XFYZNOCJCImEXc2AgMyRAwYSOQMGEj0DBhJBAwYSRQMGEhQD
BhIYAwYSZQMGEm0DBhJxAwYSIAUgAQESDAQgABFdBCAAEWEJIAQBCA4SVRJZBSABARJlBAAAEm0E
AAAScQUAAQEScQQAABIgAwAAAQMoAA4DKAACBCgAEV0EKAARYQMoAAgEKAASOQQIABJtBAgAEnEE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfOTlhOTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACERQAAAAAAAAAAAACe
RQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkEUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA5
ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAANQA2ADMA
YwAyADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcAOQBDADAAQQA1AEYAOQBGADMA
MgA2ADQAQwA5AEIAOQBCAEUARAAyADgANgAyAEUANQAyAEUAMgBFADYANQAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwA5AEMAMABBADUA
RgA5AEYAMwAyADYANABDADkAQgA5AEIARQBEADIAOAA2ADIARQA1ADIARQAyAEUANgA1AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAOQBhADkAMgA0AGUA
OQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAsDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_79c0a5f9f3264c9b9bed2862e52e2e65</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">56</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column1Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column1Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column1Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column2Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column2Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column2Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column3Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column3Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column3Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[Column_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSV File Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[CSV File Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                          name="Column 0"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 1]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]"
                          name="Column 1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 2]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]"
                          name="Column 2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 3]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]"
                          name="Column 3"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 4]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]"
                          name="Column 4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 1]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 3]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 4]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 4" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get File Name And Date Time"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[FileName_column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[FileName_column]"
                          name="FileName_column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::varInCSVFileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::varInCSVFileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          name="CurrentDateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          name="Custom_Err_Message_Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"The Flag is not I or U"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"The Flag is not I or U"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get File Name And Date Time 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Inputs[Derived Column Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Inputs[Derived Column Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[FileName_column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[FileName_column]"
                          name="FileName_column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::varInCSVFileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::varInCSVFileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          name="CurrentDateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="828"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          name="Custom_Err_Message_Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Error Column : " + (DT_STR,500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]} + "Error Code : " + (DT_STR,300,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Error Column : " + (DT_STR,500,1252)ErrorColumn + "Error Code : " + (DT_STR,300,1252)ErrorCode</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get File Name And Date Time 1 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Inputs[Derived Column Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Inputs[Derived Column Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[FileName_column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[FileName_column]"
                          name="FileName_column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::varInCSVFileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::varInCSVFileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          name="CurrentDateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="851"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          name="Custom_Err_Message_Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Error Column : " + (DT_STR,500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]} + "Error Code : " + (DT_STR,300,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]} + "  Data Conversion Error"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Error Column : " + (DT_STR,500,1252)ErrorColumn + "Error Code : " + (DT_STR,300,1252)ErrorCode + "  Data Conversion Error"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get File Name And Date Time 1 1 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Inputs[Derived Column Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Inputs[Derived Column Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[FileName_column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[FileName_column]"
                          name="FileName_column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::varInCSVFileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::varInCSVFileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          name="CurrentDateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="851"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          name="Custom_Err_Message_Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Error Column : " + (DT_STR,500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]} + "Error Code : " + (DT_STR,300,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]} + "   Data Insertion Error"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Error Column : " + (DT_STR,500,1252)ErrorColumn + "Error Code : " + (DT_STR,300,1252)ErrorCode + "   Data Insertion Error"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get File Name And Date Time 1 1 2"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Inputs[Derived Column Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Inputs[Derived Column Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[FileName_column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[FileName_column]"
                          name="FileName_column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::varInCSVFileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::varInCSVFileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          name="CurrentDateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="851"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          name="Custom_Err_Message_Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Error Column : " + (DT_STR,500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]} + "Error Code : " + (DT_STR,300,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]} + "  Data Conversion Error"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Error Column : " + (DT_STR,500,1252)ErrorColumn + "Error Code : " + (DT_STR,300,1252)ErrorCode + "  Data Conversion Error"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get File Name And Date Time 2"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[FileName_column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[FileName_column]"
                          name="FileName_column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::varInCSVFileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::varInCSVFileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[CurrentDateTime]"
                          name="CurrentDateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]"
                          name="Custom_Err_Message_Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"The Record Already Exists"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"The Record Already Exists"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Insert In  Customer Sentiment Table"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Insert into customers_sentiments_tbl (sentiment_datetime_fld, positive_fld, negative_fld, neutral_fld, flg_fld)
 Values(?,?,?,?,?)
</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="dbTimeStamp"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="numeric"
                          name="Param_1"
                          precision="10"
                          scale="2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="numeric"
                          name="Param_2"
                          precision="10"
                          scale="2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="numeric"
                          name="Param_3"
                          precision="10"
                          scale="2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Insert Table Error"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    
    IDTSConnectionManager100 connMgr;
    SqlConnection sqlConn;
    SqlCommand sqlCmd;
    SqlParameter sqlParam;

    public override void AcquireConnections(object Transaction)
    {

        connMgr = this.Connections.ADOConnection;
        sqlConn = new SqlConnection(connMgr.ConnectionString);
    }
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        /*
         INSERT INTO [dbo].[sentiment_integration_err_tbl]
           ([filename_fld]
           ,[error_datetime_fld]
           ,[sentiment_datetime_fld]
           ,[positive_fld]
           ,[negative_fld]
           ,[neutral_fld]
           ,[flg_fld]
           ,[err_msg_fld])
     VALUES
           (<filename_fld, varchar(50),>
           ,<error_datetime_fld, datetime,>
           ,<sentiment_datetime_fld, datetime,>
           ,<positive_fld, numeric(10,2),>
           ,<negative_fld, numeric(10,2),>
           ,<neutral_fld, numeric(10,2),>
           ,<flg_fld, varchar(1),>
           ,<err_msg_fld, varchar(max),>)

         */
        sqlCmd = new SqlCommand("INSERT INTO [dbo].[sentiment_integration_err_tbl] ([filename_fld],[error_datetime_fld]," +
            "[sentiment_datetime_fld]" +
          ",[positive_fld],[negative_fld],[neutral_fld],[flg_fld],[err_msg_fld]) " +
          "VALUES(@filename_fld, @error_datetime_fld, @sentiment_datetime_fld,@positive_fld," +
          "@negative_fld,@neutral_fld,@flg_fld,@err_msg_fld)", sqlConn);
        sqlParam = new SqlParameter("@filename_fld", SqlDbType.VarChar,30);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@error_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@sentiment_datetime_fld", SqlDbType.DateTime);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@positive_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@negative_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@neutral_fld", SqlDbType.Int);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@flg_fld", SqlDbType.VarChar, 1);
        sqlCmd.Parameters.Add(sqlParam);
        sqlParam = new SqlParameter("@err_msg_fld", SqlDbType.VarChar, 500);
        sqlCmd.Parameters.Add(sqlParam);

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "1";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        sqlConn.Open();
        try
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = Row.ColumnDate;
            sqlCmd.Parameters["@positive_fld"].Value = Row.Column1Numeric;
            sqlCmd.Parameters["@negative_fld"].Value = Row.Column2Numeric;
            sqlCmd.Parameters["@neutral_fld"].Value = Row.Column3Numeric;
            sqlCmd.Parameters["@flg_fld"].Value = Row.Column4;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr;
            sqlCmd.ExecuteNonQuery();
        }
        catch(Exception ex)
        {
            sqlCmd.Parameters["@filename_fld"].Value = Variables.varInCSVFileName;
            sqlCmd.Parameters["@error_datetime_fld"].Value = DateTime.Now;
            sqlCmd.Parameters["@sentiment_datetime_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@positive_fld"].Value = DBNull.Value; 
            sqlCmd.Parameters["@negative_fld"].Value = DBNull.Value; 
            sqlCmd.Parameters["@neutral_fld"].Value = DBNull.Value; 
            sqlCmd.Parameters["@flg_fld"].Value = DBNull.Value;
            sqlCmd.Parameters["@err_msg_fld"].Value = Row.CustomErrMessageColumnstr+" \n"+ex.Message.ToString();
            sqlCmd.ExecuteNonQuery();

        }
        finally
        {
            sqlConn.Close();
        }
    }

    public override void ReleaseConnections()
    {

        connMgr.ReleaseConnection(sqlConn);

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String FileNamecolumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool FileNamecolumn_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime CurrentDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[6]);
        }
    }
    public bool CurrentDateTime_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String CustomErrMessageColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool CustomErrMessageColumn_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String CustomErrMessageColumnstr
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool CustomErrMessageColumnstr_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public DateTime ColumnDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[9]);
        }
    }
    public bool ColumnDate_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Decimal Column2Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[10]);
        }
    }
    public bool Column2Numeric_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public Decimal Column3Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[11]);
        }
    }
    public bool Column3Numeric_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[12]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[13]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public Decimal Column1Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[14]);
        }
    }
    public bool Column1Numeric_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{6E83B716-ABFB-40E1-AC09-F602472F4444}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_148EA1008AE041F5B9BC5BBB39DEC648</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_148EA1008AE041F5B9BC5BBB39DEC648.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AgAAAVcVogEJAQAAAPoBMwAWAAABAAAAMgAAAAgAAAALAAAAOQAAAA8AAAA/AAAAEAAAAAEAAAAF
AAAAJQAAACcAAAABAAAABwAAAAEAAAAAACkFAQAAAAAABgDPA6oJBgBjBKoJBgAbA5cJDwAeCgAA
BgBIA3QHBgCyA3QHBgCTA3QHBgBKBHQHBgDvA3QHBgAIBHQHBgBfA3QHBgB6A8YECgAjBE4CDgBm
APoIEgAACBkLEgCbARkLEgBXCRkLBgD6CtUGBgAOCNUGCgDDCE4CFgC0CE4CCgBICE4CBgBFAtUG
BgALBdUGCgBNC04CBgD+ApcJBgDUCMoJBgA8CFMHGgDOAhMFGgAvAxMFGgChAj4HBgDjAqoJEgBv
AiIBEgCmBxkLEgDhBxgIEgBLCRgIEgCRARgIBgBRBdUGBgABBdUGBgArCNUGHgABACIJHgAqACIJ
HgBNACIJDgB/APoIDgAaAPoIZwDDCwAADgCQAPoIBgB0AtUGBgDQAdUGBgAeDHQHAAAAABEBAAAA
AAEAAQABABAA7QYAABAAAQABAAEAEACnCAAAUQAFAAcAAQAQAC8LAABlAAUAKAABABAA2AoAAEkA
BwAsAAEAEAB/CgAASQAIAC8AAAAQANEJLQpJAAkAMwAAARAArgotCn0ACwA3AAEAZAkDAQEANgcH
AQEAigELAQEAwwYPAQYA2AoTAQYAfwoXAQEAPQsbAQEAPQsbAREA3AYfAREAkQIjAREApgEnAVAg
AAAAAMYAvgpPAAEAfCAAAAAAxgCBBAYAAgDwIQAAAADGAIwEBgACAAgiAAAAAMYA+wsrAQIAuCQA
AAAAxgDRCgYAAwDLJAAAAACGGGwJBgADANMkAAAAAIYYbAlpAAMA3iQAAAAAhgioABsABgDzJAAA
AACGCFgFlgAGAPwkAAAAAIYItAAbAAYAESUAAAAAhghrBZYABgAaJQAAAACGCMkAGwAGAC8lAAAA
AIYIfgWWAAYAOCUAAAAAhgjVABsABgBNJQAAAACGCJEFlgAGAFYlAAAAAIYI4QAbAAYAayUAAAAA
hgikBZYABgB0JQAAAACGCCMHGwAGAIklAAAAAIYIhAaWAAYAkiUAAAAAhgg6AjEBBgCnJQAAAACG
CBoGlgAGALAlAAAAAIYI+AYbAAYAxSUAAAAAhghLBpYABgDOJQAAAACGCHkJGwAGAOMlAAAAAIYI
ngaWAAYA7CUAAAAAhgi/AjEBBgACJgAAAACGCDUGlgAGAAwmAAAAAIYIYAE2AQYAIiYAAAAAhgjR
BZYABgAsJgAAAACGCHMBNgEGAEImAAAAAIYI6wWWAAYATCYAAAAAhgi2AVkABgBiJgAAAACGCAUG
lgAGAGwmAAAAAIYIEwdZAAYAgiYAAAAAhghtBpYABgCMJgAAAACGCE0BNgEGAKImAAAAAIYItwWW
AAYArCYAAAAAhgASDJYABgC0JgAAAACGAAELlgAGALwmAAAAAIYYbAkGAAYA3CYAAAAAxgCiCzsB
BgABJwAAAADGAZsLKwEKABQnAAAAAMYB+wsrAQsAFicAAAAAhhhsCUUBDAAlJwAAAACGCM8HuwAN
AEYnAAAAAIYIvQe7AA0AZycAAAAAhhhsCUUBDQB2JwAAAACGCPQBGwAOAJwnAAAAAIYIogQbAA4A
wicAAAAAhgi0BBAADgDfJwAAAACDGGwJBgAPAOcnAAAAAJMI0AhLAQ8AEygAAAAAkwh5AlABDwAa
KAAAAACTCIUCVQEPACIoAAAAAJYIDQtbARAAKSgAAAAAhhhsCQYAEAAxKAAAAACRGHIJYAEQAAAA
AQBoBwAAAQAWDAAAAQDJCAAAAgCJCgAAAwBWCAAAAQAaAQAAAgAJAgAAAwDJCAAABABWCAAAAQDJ
CAAAAQAWDAAAAQBTCwAAAQBTCwAAAQDABAAAAQDABAkAbAkBABEAbAkGABkAbAkKACkAbAkQADEA
bAkQADkAbAkQAEEAbAkQAEkAbAkQAFEAbAkQAFkAbAkQAGEAbAkQAGkAbAkGANEAbAkGAPEAbAkV
AAEBbAkGAHEA4AQbAHkAbAkQAMkAgQQGAIEAbAkfAIkAbAkmAIEA5AovABEBhgE1AIkAbAk8AMkA
jAQGABkB6AYGABEBzAZJACEBmARPALkA8wtUACkBJwxZADEBnARdAJkAxAEbAJEA9QQbADkB8wpi
ABkBuQIGAHEA7gdPAKEAbAlpAKEAyQhzAKEAiQp3AKkA/gR7AKEAvAaAAKkALgKFAKkACAWLAKkA
wACRAKEAEgyWAKEAAQuWAMkAbAkGADkBtwqaAMkAnQqiAJEAbAkGAMkALgGoAEkBhgeuAFEBEwK0
AFkB5Ai7AMkAcwrAAGEBzAbGAMkA3gvNAGkBrwvTAMkAXArAAGkBmARPAIEB4gHaAIEBGgzjANkA
bAnpAPkAbAkGAC4ACwCOAS4AEwCXAS4AGwC2AS4AIwC/AS4AKwDoAS4AMwDoAS4AOwDoAS4AQwC/
AS4ASwDuAS4AUwDoAS4AWwAFAkMAYwBPAuMAawBPAmEBewBPAmkEcwC2AYkEcwC2AUQAAwABAAUA
HwAGACEABwAjAAgAJQAAAKwAZAEAAFwFaAEAALgAZAEAAG8FaAEAAM0AZAEAAIIFaAEAANkAZAEA
AJUFaAEAAOUAZAEAAKgFaAEAACcHZAEAAIgGaAEAAD4CbAEAAB4GaAEAAPwGZAEAAE8GaAEAAH0J
ZAEAAKIGaAEAAMMCbAEAADkGaAEAAGQBcQEAANUFaAEAAHcBcQEAAO8FaAEAALoBdgEAAAkGaAEA
ABcHdgEAAHEGaAEAAFEBcQEAALsFaAEAANMHegEAAMEHegEAAPgBZAEAALgEZAEAANQIfwEAAJkC
hAEAABELiQECAAgAAwACAAkABQACAAoABwACAAsACQACAAwACwACAA0ADQACAA4ADwACAA8AEQAC
ABAAEwACABEAFQACABIAFwACABMAGQACABQAGwACABUAHQACABYAHwACABcAIQACABgAIwACABkA
JQACABoAJwACABsAKQACABwAKwACAB0ALQACAB4ALwACAB8AMQACACAAMwACACEANQACACIANwAC
ACMAOQACACQAOwACACUAPQACAC0APwACAC4AQQACADAAQwACADEARQABADIARQACADQARwACADUA
SQABADYASQACADcASwAEgAAAAQAAAAAAAAAAAAAAAADtAAAABAAAAAAAAAAAAAAA8QBEAQAAAAAP
AAAAAAAAAAAAAAD6AF0LAAAAAA8AAAAAAAAAAAAAAPoAYAgAAAAABAAAAAAAAAAAAAAA8QAiAQAA
AAAPAAAAAAAAAAAAAAD6AHoLAAAAAAQAAAAAAAAAAAAAAPEA1QYAAAAADwAAAAAAAAAAAAAA+gCD
CAAAAAAAAAAAAQAAANsJAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxl
MTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0
aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFs
dWF0b3JDb250ZXh0MTAwAGdldF9Db2x1bW4wAGdldF9Db2x1bW4xAEdldEludDMyAGdldF9Db2x1
bW4yAGdldF9Db2x1bW4zAGdldF9Db2x1bW40AFNDXzE0OEVBMTAwOEFFMDQxRjVCOUJDNUJCQjM5
REVDNjQ4ADxNb2R1bGU+AElucHV0SUQAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRh
AG1zY29ybGliAGdldF9Db2x1bW4xTnVtZXJpYwBnZXRfQ29sdW1uMk51bWVyaWMAZ2V0X0NvbHVt
bjNOdW1lcmljAEFkZABzcWxDbWQARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVsdEluc3RhbmNl
AGdldF9FcnJvckNvZGUAZ2V0X01lc3NhZ2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUAZ2V0X3ZhckluQ1NWRmlsZU5hbWUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9u
QnlOYW1lAEdldERhdGVUaW1lAGdldF9DdXJyZW50RGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUAU3FsRGJUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBnZXRfQ29sdW1uRGF0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNl
dF9WYWx1ZQBnZXRfdmFydGFibGV2YWx1ZQBzZXRfdmFydGFibGV2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAEdldFN0cmluZwBHZXRE
ZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18xNDhFQTEwMDhBRTA0MUY1QjlCQzVCQkIz
OURFQzY0OC5kbGwAREJOdWxsAGdldF9Db2x1bW4wX0lzTnVsbABnZXRfQ29sdW1uMV9Jc051bGwA
Z2V0X0NvbHVtbjJfSXNOdWxsAGdldF9Db2x1bW4zX0lzTnVsbABnZXRfQ29sdW1uNF9Jc051bGwA
Z2V0X0NvbHVtbjFOdW1lcmljX0lzTnVsbABnZXRfQ29sdW1uMk51bWVyaWNfSXNOdWxsAGdldF9D
b2x1bW4zTnVtZXJpY19Jc051bGwAZ2V0X0Vycm9yQ29kZV9Jc051bGwAZ2V0X0N1cnJlbnREYXRl
VGltZV9Jc051bGwAZ2V0X0NvbHVtbkRhdGVfSXNOdWxsAGdldF9DdXN0b21FcnJNZXNzYWdlQ29s
dW1uX0lzTnVsbABnZXRfRXJyb3JDb2x1bW5fSXNOdWxsAGdldF9GaWxlTmFtZWNvbHVtbl9Jc051
bGwAZ2V0X0N1c3RvbUVyck1lc3NhZ2VDb2x1bW5zdHJfSXNOdWxsAHNxbFBhcmFtAGdldF9JdGVt
AFN5c3RlbQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AZ2V0X0N1c3RvbUVyck1lc3NhZ2VD
b2x1bW4AZ2V0X0Vycm9yQ29sdW1uAGdldF9GaWxlTmFtZWNvbHVtbgBzcWxDb25uAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFRyYW5zYWN0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVj
dGlvbgBnZXRfT0xFQ29ubmVjdGlvbgBnZXRfQURPQ29ubmVjdGlvbgBEYkNvbm5lY3Rpb24AUmVs
ZWFzZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9u
AFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1Bp
cGVsaW5lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFw
cGVyAERiUGFyYW1ldGVyAFNxbFBhcmFtZXRlcgBjb25uTWdyAC5jdG9yAC5jY3RvcgBnZXRfQ3Vz
dG9tRXJyTWVzc2FnZUNvbHVtbnN0cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzk5YTkyNGU5MmU3OTQ5ZGFhNDM5
OTIzMjkwNTYzYzIwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ185OWE5MjRlOTJlNzk0OWRhYTQzOTkyMzI5MDU2M2MyMC5Qcm9wZXJ0aWVzAGdldF9SZWFk
V3JpdGVWYXJpYWJsZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQWNxdWlyZUNvbm5lY3Rpb25zAFJlbGVh
c2VDb25uZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0AGdl
dF9EZWZhdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0
aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQA
Z2V0X05vdwBJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AEV4ZWN1
dGVOb25RdWVyeQAAAIJvSQBOAFMARQBSAFQAIABJAE4AVABPACAAWwBkAGIAbwBdAC4AWwBzAGUA
bgB0AGkAbQBlAG4AdABfAGkAbgB0AGUAZwByAGEAdABpAG8AbgBfAGUAcgByAF8AdABiAGwAXQAg
ACgAWwBmAGkAbABlAG4AYQBtAGUAXwBmAGwAZABdACwAWwBlAHIAcgBvAHIAXwBkAGEAdABlAHQA
aQBtAGUAXwBmAGwAZABdACwAWwBzAGUAbgB0AGkAbQBlAG4AdABfAGQAYQB0AGUAdABpAG0AZQBf
AGYAbABkAF0ALABbAHAAbwBzAGkAdABpAHYAZQBfAGYAbABkAF0ALABbAG4AZQBnAGEAdABpAHYA
ZQBfAGYAbABkAF0ALABbAG4AZQB1AHQAcgBhAGwAXwBmAGwAZABdACwAWwBmAGwAZwBfAGYAbABk
AF0ALABbAGUAcgByAF8AbQBzAGcAXwBmAGwAZABdACkAIABWAEEATABVAEUAUwAoAEAAZgBpAGwA
ZQBuAGEAbQBlAF8AZgBsAGQALAAgAEAAZQByAHIAbwByAF8AZABhAHQAZQB0AGkAbQBlAF8AZgBs
AGQALAAgAEAAcwBlAG4AdABpAG0AZQBuAHQAXwBkAGEAdABlAHQAaQBtAGUAXwBmAGwAZAAsAEAA
cABvAHMAaQB0AGkAdgBlAF8AZgBsAGQALABAAG4AZQBnAGEAdABpAHYAZQBfAGYAbABkACwAQABu
AGUAdQB0AHIAYQBsAF8AZgBsAGQALABAAGYAbABnAF8AZgBsAGQALABAAGUAcgByAF8AbQBzAGcA
XwBmAGwAZAApAAAbQABmAGkAbABlAG4AYQBtAGUAXwBmAGwAZAAAJ0AAZQByAHIAbwByAF8AZABh
AHQAZQB0AGkAbQBlAF8AZgBsAGQAAC9AAHMAZQBuAHQAaQBtAGUAbgB0AF8AZABhAHQAZQB0AGkA
bQBlAF8AZgBsAGQAABtAAHAAbwBzAGkAdABpAHYAZQBfAGYAbABkAAAbQABuAGUAZwBhAHQAaQB2
AGUAXwBmAGwAZAAAGUAAbgBlAHUAdAByAGEAbABfAGYAbABkAAARQABmAGwAZwBfAGYAbABkAAAZ
QABlAHIAcgBfAG0AcwBnAF8AZgBsAGQAAAMxAAAFIAAKAAAPSQBuAHAAdQB0ACAAMAAAG0EARABP
AEMAbwBuAG4AZQBjAHQAaQBvAG4AABtPAEwARQBDAG8AbgBuAGUAYwB0AGkAbwBuAAAhdgBhAHIA
SQBuAEMAUwBWAEYAaQBsAGUATgBhAG0AZQAAG3YAYQByAHQAYQBiAGwAZQB2AGEAbAB1AGUAAHFT
AEMAXwA5ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAA
NQA2ADMAYwAyADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA
GkJJ2f5VwUy/Dr4el6aBNAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERdQMgAA4GIAIBDhI9CCAD
AQ4RgIUIBSAAEoCJBiABEkUSRQcgAgEOEYCFBAcBEk0FIAESRQ4EIAEBHAQAABFdAyAACAQGEoCZ
BgADDg4ODgkgAwESVR0IElkDBhJVAwYdCAQgAQ4IBCABAggFIAERXQgFIAERYQgEIAEICAMgAAIH
IAICDhGAoQUgAR0ICAUgABKApQUgABKAqQYgARKArQ4EIAASOQUgABKAsQYgARKAtRwFAAASgLkG
IAEcEoC9CAABEoDBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkIiYRdzYCAzJEDBhI5AwYSPQMG
EkEDBhJFAwYSFAMGEhgDBhJlAwYSbQMGEnEDBhIgBSABARIMBCAAEV0EIAARYQkgBAEIDhJVElkF
IAEBEmUEAAASbQQAABJxBQABARJxBAAAEiADAAABAygADgMoAAIEKAARXQQoABFhAygACAQoABI5
BAgAEm0ECAAScQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTQ185OWE5MjRlOTJlNzk0OWRhYTQzOTkyMzI5MDU2M2MyMAAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKxG
AAAAAAAAAAAAAMZGAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4RgAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADkA
OQBhADkAMgA0AGUAOQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBj
ADIAMAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQA0ADgARQBBADEAMAAwADgAQQBF
ADAANAAxAEYANQBCADkAQgBDADUAQgBCAEIAMwA5AEQARQBDADYANAA4AC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAxADQAOABFAEEAMQAw
ADAAOABBAEUAMAA0ADEARgA1AEIAOQBCAEMANQBCAEIAQgAzADkARABFAEMANgA0ADgALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOQA5AGEAOQAyADQAZQA5
ADIAZQA3ADkANAA5AGQAYQBhADQAMwA5ADkAMgAzADIAOQAwADUANgAzAGMAMgAwAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADYNgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_148ea1008ae041f5b9bc5bbb39dec648</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">C0</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[FileName_column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FileName_column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[FileName_column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[CurrentDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CurrentDateTime"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[CurrentDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="851"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Custom_Err_Message_Column_str]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1500"
                          cachedName="Custom_Err_Message_Column_str"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column_Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column2Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column2Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column2Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column3Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column3Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column3Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0].Columns[Column1Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column1Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column1Numeric]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Messgae Column To String From Wide String"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Inputs[Derived Column Input].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="828"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1500"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          name="Custom_Err_Message_Column_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,1500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,1500,1252)Custom_Err_Message_Column</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Messgae Column To String From Wide String 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Inputs[Derived Column Input].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1500"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          name="Custom_Err_Message_Column_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,1500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,1500,1252)Custom_Err_Message_Column</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Messgae Column To String From Wide String 2"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Inputs[Derived Column Input].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="851"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1500"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          name="Custom_Err_Message_Column_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,1500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,1500,1252)Custom_Err_Message_Column</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Messgae Column To String From Wide String 2 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Inputs[Derived Column Input].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="851"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1500"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          name="Custom_Err_Message_Column_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,1500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,1500,1252)Custom_Err_Message_Column</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Messgae Column To String From Wide String 2 2"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Inputs[Derived Column Input].Columns[Custom_Err_Message_Column]"
                          cachedDataType="wstr"
                          cachedLength="851"
                          cachedName="Custom_Err_Message_Column"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1500"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column_str]"
                          name="Custom_Err_Message_Column_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,1500,1252)#{Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output].Columns[Custom_Err_Message_Column]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,1500,1252)Custom_Err_Message_Column</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  localeId="12297"
                  name="Success Full Update"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>


    public override void PreExecute()
    {
        base.PreExecute();
    
        /*
         * Add your code here
         */

    

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "0";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
       
    }

   

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Decimal Column1Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[5]);
        }
    }
    public bool Column1Numeric_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Decimal Column2Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
    }
    public bool Column2Numeric_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Decimal Column3Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[7]);
        }
    }
    public bool Column3Numeric_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public DateTime ColumnDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[8]);
        }
    }
    public bool ColumnDate_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public DateTime ColumnDate1
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[9]);
        }
    }
    public bool ColumnDate1_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{078BBAA4-EA84-45F6-8505-98BB58528594}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_BEA393B1F78F4FE59CEBEE5242258201</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_BEA393B1F78F4FE59CEBEE5242258201.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANvaV14AAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAnjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEw5AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
OQAAAAAAAEgAAAACAAUARCMAAFAVAAABAAAAAAAAAJQ4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqXgIoEQAACgJ7AgAABHIBAABwbyYAAAYqBioe
AigcAAAGKioCAwQFKBIAAAoqUgJ7EwAACgJ7FAAAChaUbxUAAAoqIgIWKBYAAAoqUgJ7EwAACgJ7
FAAACheUbxUAAAoqIgIXKBYAAAoqUgJ7EwAACgJ7FAAAChiUbxUAAAoqIgIYKBYAAAoqUgJ7EwAA
CgJ7FAAAChmUbxUAAAoqIgIZKBYAAAoqUgJ7EwAACgJ7FAAAChqUbxUAAAoqIgIaKBYAAAoqUgJ7
EwAACgJ7FAAAChuUbxcAAAoqIgIbKBYAAAoqUgJ7EwAACgJ7FAAAChyUbxcAAAoqIgIcKBYAAAoq
UgJ7EwAACgJ7FAAACh2UbxcAAAoqIgIdKBYAAAoqUgJ7EwAACgJ7FAAACh6UbxgAAAoqIgIeKBYA
AAoqVgJ7EwAACgJ7FAAACh8JlG8YAAAKKiYCHwkoFgAACioeAigZAAAKKh4CKBoAAAoqfgIoGwAA
CgICcyAAAAZ9AQAABAICcyMAAAZ9AgAABCqSBHIFAABwGm8cAAAKLBUCBQIDKB0AAAoOBHMFAAAG
bx4AAAYqSisHAgNvHwAABgNvGgAABi3xKjoCKB4AAAoCA30DAAAEKoICewMAAARvHwAACm8gAAAK
chUAAHBvIQAACm8iAAAKKoICewMAAARvHwAACm8gAAAKcjEAAHBvIQAACm8iAAAKKjoCKB4AAAoC
A30EAAAEKpYCewQAAARvIwAACnJNAABwbyQAAAooJQAACm8mAAAKdB0AAAEqlgJ7BAAABG8nAAAK
cm8AAHBvJAAACiglAAAKbyYAAAp0HQAAASpyAnsEAAAEbycAAApybwAAcG8kAAAKA28oAAAKKh4C
KB4AAAoqrn4FAAAELR5yiwAAcNAHAAACKCkAAApvKgAACnMrAAAKgAUAAAR+BQAABCoafgYAAAQq
HgKABgAABCoafgcAAAQqHgIoLAAACioucywAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAABgIAAAjfgAAhAgAAMgJAAAjU3RyaW5ncwAAAABMEgAAAAEAACNVUwBM
EwAAEAAAACNHVUlEAAAAXBMAAPQBAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEA
AAAoAAAACAAAAAcAAAAtAAAADgAAACwAAAAQAAAABQAAABsAAAAdAAAAAQAAAAYAAAABAAAAAACt
BAEAAAAAAAYAcQOWBwYABQSWBwYAvQKDBw8ACggAAAYA6gIABgYAVAMABgYANQMABgYA7AMABgYA
kQMABgYAqgMABgYAAQMABgYAHANoBAoAxQP7AQoA7gb7AQ4A3wb7AQoAcwb7AQYAjwS4BQYA8gG4
BQoA8wj7AQYAtgi4BRIAZgAlBwYAoAKDBwYA/wa2BwYAZwbrBRYAcAKXBBYA0QKXBBYASQLWBQYA
hQKWBwYAhQS4BQYAVga4BRoAAQBNBxoAKgBNBxoATQBNBxIAfwAlBxIAGgAlB08AaQkAABIAkAAl
BwYAHAK4BQYAkQG4BQYAvAkABgAAAAAYAQAAAAABAAEAAQAQAMsFAAAQAAEAAQABABAA0gYAADkA
AQAFAAEAEADVCAAATQABABwAAQAQAKoIAABRAAMAIAABABAAawgAAFEABAAjAAAAEAC9BxkIUQAF
ACcAAAEQAJoIGQhtAAcAKwAGAKoIswAGAGsItwABAOMIuwABAOMIuwARAL8FvwARADkCwwARAIEB
xwBQIAAAAADGACMEBgABAFggAAAAAMYALgQGAAEAcCAAAAAAxgCZCcsAAQByIAAAAACGGHYHBgAC
AHogAAAAAIYYdgcbAAIAhSAAAAAAhgioANEABQCaIAAAAACGCNUEQwAFAKMgAAAAAIYI6ADRAAUA
uCAAAAAAhgj/BEMABQDBIAAAAACGCPQA0QAFANYgAAAAAIYIEgVDAAUA3yAAAAAAhggAAdEABQD0
IAAAAACGCCUFQwAFAP0gAAAAAIYIDAHRAAUAEiEAAAAAhgg4BUMABQAbIQAAAACGCEgB1QAFADAh
AAAAAIYISwVDAAUAOSEAAAAAhghbAdUABQBOIQAAAACGCGUFQwAFAFchAAAAAIYIbgHVAAUAbCEA
AAAAhgh/BUMABQB1IQAAAACGCGEC2gAFAIohAAAAAIYImQVDAAUAkyEAAAAAhgjYANoABQCpIQAA
AACGCOgEQwAFALMhAAAAAIYAsAlDAAUAuyEAAAAAhgC9CEMABQDDIQAAAACGGHYHBgAFAOMhAAAA
AMYASAnfAAUACCIAAAAAxgFBCcsACQBwIAAAAADGAZkJywAKABsiAAAAAIYYdgfpAAsAKiIAAAAA
hghEBmYADABLIgAAAACGCDIGZgAMAGwiAAAAAIYYdgfpAAwAeyIAAAAAhgi1AdEADQChIgAAAACG
CEQE0QANAMciAAAAAIYIVgQQAA0A5CIAAAAAgxh2BwYADgDsIgAAAACTCPsG7wAOABgjAAAAAJMI
IQL0AA4AHyMAAAAAkwgtAvkADgAnIwAAAACWCMkI/wAPAC4jAAAAAIYYdgcGAA8ANiMAAAAAkRh8
BwQBDwAAAAEAtAkAAAEA9AYAAAIAdQgAAAMAgQYAAAEAIQEAAAIAygEAAAMA9AYAAAQAgQYAAAEA
9AYAAAEAtAkAAAEA+QgAAAEA+QgAAAEAYgQAAAEAYgQJAHYHAQARAHYHBgAZAHYHCgApAHYHEAAx
AHYHEAA5AHYHEABBAHYHEABJAHYHEABRAHYHEABZAHYHEABhAHYHEABpAHYHBgCxAHYHBgDRAHYH
FQDhAHYHBgCZACMEBgCZAC4EBgBxAHYHGwBxAPQGJQBxAHUIKQB5AIIELQBxAKgFMgB5AIwENwB5
AO8BPQBxALAJQwBxAL0IQwCZAHYHBgDpAKMIRwCZAIkITgChAHYHBgCZACkBVAD5ABIGWQABAdQB
XwAJAQ8HZgCZAF8IawARAa8FcQCZAIQJeAAZAVUJfgCZAEgIawAZAToEhQAxAaMBigAxAbgJkwC5
AHYHmQDZAHYHBgAuAAsALgEuABMANwEuABsAVgEuACMAXwEuACsAiAEuADMAiAEuADsAiAEuAEMA
XwEuAEsAjgEuAFMAiAEuAFsApQFDAGMA7wHhAHsA7wHjAGsA7wEpA3MAVgFJA3MAVgEDAAEABQAV
AAYAFwAHABkACAAbAAAArAAIAQAA2QQMAQAA7AAIAQAAAwUMAQAA+AAIAQAAFgUMAQAABAEIAQAA
KQUMAQAAEAEIAQAAPAUMAQAATAEQAQAATwUMAQAAXwEQAQAAaQUMAQAAcgEQAQAAgwUMAQAAZQIV
AQAAnQUMAQAA3AAVAQAA7AQMAQAASAYaAQAANgYaAQAAuQEIAQAAWgQIAQAA/wYfAQAAQQIkAQAA
zQgpAQIABgADAAIABwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAIADAAPAAIADQARAAIADgAT
AAIADwAVAAIAEAAXAAIAEQAZAAIAEgAbAAIAEwAdAAIAFAAfAAIAFQAhAAIAFgAjAAIAFwAlAAIA
GAAnAAIAGQApAAIAIQArAAIAIgAtAAIAJAAvAAIAJQAxAAEAJgAxAAIAKAAzAAIAKQA1AAEAKgA1
AAIAKwA3AASAAAABAAAAAAAAAAAAAAAAALQAAAAEAAAAAAAAAAAAAAChAD8BAAAAAA8AAAAAAAAA
AAAAAKoAAwkAAAAADwAAAAAAAAAAAAAAqgAgCQAAAAAPAAAAAAAAAAAAAACqAIsGAAAAAAQAAAAA
AAAAAAAAAKEAuAUAAAAADwAAAAAAAAAAAAAAqgCuBgAAAAAAAAAAAQAAAMcHAAAAAAAAAElEVFND
b21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0X0NvbHVt
bjAAU0NfQkVBMzkzQjFGNzhGNEZFNTlDRUJFRTUyNDIyNTgyMDEAZ2V0X0NvbHVtbkRhdGUxAGdl
dF9Db2x1bW4xAGdldF9Db2x1bW4yAGdldF9Db2x1bW4zAGdldF9Db2x1bW40ADxNb2R1bGU+AElu
cHV0SUQAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAGdldF9Db2x1bW4xTnVtZXJpYwBn
ZXRfQ29sdW1uMk51bWVyaWMAZ2V0X0NvbHVtbjNOdW1lcmljAGRlZmF1bHRJbnN0YW5jZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfdmFySW5DU1ZGaWxlTmFtZQBJbnB1
dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAR2V0RGF0ZVRpbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X0NvbHVtbkRhdGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFs
dWUAZ2V0X3ZhcnRhYmxldmFsdWUAc2V0X3ZhcnRhYmxldmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBHZXRTdHJpbmcAR2V0RGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfQkVB
MzkzQjFGNzhGNEZFNTlDRUJFRTUyNDIyNTgyMDEuZGxsAGdldF9Db2x1bW4wX0lzTnVsbABnZXRf
Q29sdW1uRGF0ZTFfSXNOdWxsAGdldF9Db2x1bW4xX0lzTnVsbABnZXRfQ29sdW1uMl9Jc051bGwA
Z2V0X0NvbHVtbjNfSXNOdWxsAGdldF9Db2x1bW40X0lzTnVsbABnZXRfQ29sdW1uMU51bWVyaWNf
SXNOdWxsAGdldF9Db2x1bW4yTnVtZXJpY19Jc051bGwAZ2V0X0NvbHVtbjNOdW1lcmljX0lzTnVs
bABnZXRfQ29sdW1uRGF0ZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRfT0xFQ29ubmVjdGlv
bgBnZXRfQURPQ29ubmVjdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5h
bWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVy
AFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ185OWE5MjRl
OTJlNzk0OWRhYTQzOTkyMzI5MDU2M2MyMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU0NfOTlhOTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAuUHJvcGVy
dGllcwBnZXRfUmVhZFdyaXRlVmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJD
b2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25z
AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0
aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQA
SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAAAAAAzAAAA9JAG4A
cAB1AHQAIAAwAAAbQQBEAE8AQwBvAG4AbgBlAGMAdABpAG8AbgAAG08ATABFAEMAbwBuAG4AZQBj
AHQAaQBvAG4AACF2AGEAcgBJAG4AQwBTAFYARgBpAGwAZQBOAGEAbQBlAAAbdgBhAHIAdABhAGIA
bABlAHYAYQBsAHUAZQAAcVMAQwBfADkAOQBhADkAMgA0AGUAOQAyAGUANwA5ADQAOQBkAGEAYQA0
ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAAAAt5XaK8H1jUiA2ti0dH4T1AAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERZQkgAwESPR0IEkEDBhI9AwYdCAQgAQ4IBCABAggFIAERRQgFIAERSQgDIAACBiACAg4ReQUg
AR0ICAQgABJ9BSAAEoCBBiABEoCFDgQgABJVBSAAEoCJBiABEoCNHAUAABKAkQYgARwSgJUEIAEB
HAgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJNAwYS
XQMGEmEDBhIgBSABARIMAyAADgQgABFFBCAAEUkJIAQBCA4SPRJBBSABARJNBAAAEl0EAAASYQUA
AQESYQQAABIgAwAAAQMoAA4DKAACBCgAEUUEKAARSQQoABJVBAgAEl0ECAASYQQIABIgCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ185OWE5MjRl
OTJlNzk0OWRhYTQzOTkyMzI5MDU2M2MyMAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHQ5AAAAAAAAAAAAAI45AAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACAOQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA5ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAA
NQA2ADMAYwAyADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAEIARQBBADMAOQAzAEIA
MQBGADcAOABGADQARgBFADUAOQBDAEUAQgBFAEUANQAyADQAMgAyADUAOAAyADAAMQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AQgBFAEEA
MwA5ADMAQgAxAEYANwA4AEYANABGAEUANQA5AEMARQBCAEUARQA1ADIANAAyADIANQA4ADIAMAAx
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAOQBhADkA
MgA0AGUAOQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAoDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bea393b1f78f4fe59cebee5242258201</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">9A</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column1Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column1Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column1Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column2Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column2Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column2Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column3Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column3Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column3Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0].Columns[Column_Date1]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  localeId="1033"
                  name="Success Full Update 1"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ADOConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ADOConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 OLEConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"OLEConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varInCSVFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varInCSVFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vartablevalue
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["vartablevalue"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["vartablevalue"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>


    public override void PreExecute()
    {
        base.PreExecute();
    
        /*
         * Add your code here
         */

    

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        Variables.vartablevalue = "0";
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
       
    }

   

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Column1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Column2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Column2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Column3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Column3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Column4
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Column4_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Decimal Column1Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[5]);
        }
    }
    public bool Column1Numeric_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Decimal Column2Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
    }
    public bool Column2Numeric_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Decimal Column3Numeric
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[7]);
        }
    }
    public bool Column3Numeric_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public DateTime ColumnDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[8]);
        }
    }
    public bool ColumnDate_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Settings.get_Default():SC_99a924e92e7949daa439923290563c20.Properties.Sett" +
    "ings")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99a924e92e7949daa439923290563c20")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99a924e92e7949daa439923290563c20</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99a924e92e7949daa439923290563c20</msb:DisplayName>
    <msb:ProjectId>{E9519057-682A-42D2-A75C-950FF29F6B13}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99a924e92e7949daa439923290563c20.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99a924e92e7949daa439923290563c20.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F555FA84-C513-49C6-89C0-9140EEF12EA9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99a924e92e7949daa439923290563c20</RootNamespace>
    <AssemblyName>SC_9471D3617DCE476FAAC3C037DAE87FF5</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99a924e92e7949daa439923290563c20.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99a924e92e7949daa439923290563c20.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99a924e92e7949daa439923290563c20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9471D3617DCE476FAAC3C037DAE87FF5.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
PQBxAIkJQwBxAJYIQwCZAE8HBgDpAHwIRwCZAGIITgChAE8HBgCZABkBVAD5AOsFWQABAcQBXwAJ
AegGZgCZADgIawARAYgFcQCZAF0JeAAZAS4JfgCZACEIawAZASoEhQAxAZMBigAxAZEJkwC5AE8H
mQDZAE8HBgAuAAsALgEuABMANwEuABsAVgEuACMAXwEuACsAiAEuADMAiAEuADsAiAEuAEMAXwEu
AEsAjgEuAFMAiAEuAFsApQFDAGMA7wHhAHsA7wHjAGsA7wHpAnMAVgEJA3MAVgEDAAEABQATAAYA
FQAHABcACAAZAAAArAAIAQAAyQQMAQAAuAAIAQAA3AQMAQAAxAAIAQAA7wQMAQAA0AAIAQAAAgUM
AQAA3AAIAQAAFQUMAQAAPAEQAQAAKAUMAQAATwEQAQAAQgUMAQAAYgEQAQAAXAUMAQAAVQIVAQAA
dgUMAQAAIQYaAQAADwYaAQAAqQEIAQAASgQIAQAA2AYfAQAAMQIkAQAApggpAQIABgADAAIABwAF
AAIACAAHAAIACQAJAAIACgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIADwAVAAIAEAAXAAIA
EQAZAAIAEgAbAAIAEwAdAAIAFAAfAAIAFQAhAAIAFgAjAAIAFwAlAAIAHwAnAAIAIAApAAIAIgAr
AAIAIwAtAAEAJAAtAAIAJgAvAAIAJwAxAAEAKAAxAAIAKQAzAASAAAABAAAAAAAAAAAAAAAAAOQA
AAAEAAAAAAAAAAAAAAChAC8BAAAAAA8AAAAAAAAAAAAAAKoA3AgAAAAADwAAAAAAAAAAAAAAqgD5
CAAAAAAPAAAAAAAAAAAAAACqAGQGAAAAAAQAAAAAAAAAAAAAAKEAkQUAAAAADwAAAAAAAAAAAAAA
qgCHBgAAAAAAAAAAAQAAAKAHAAAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFy
aWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNv
bm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURU
U0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0X0NvbHVtbjAAZ2V0X0NvbHVtbjEAZ2V0X0NvbHVtbjIA
Z2V0X0NvbHVtbjMAZ2V0X0NvbHVtbjQAU0NfOTQ3MUQzNjE3RENFNDc2RkFBQzNDMDM3REFFODdG
RjUAPE1vZHVsZT4ASW5wdXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZ2V0X0Nv
bHVtbjFOdW1lcmljAGdldF9Db2x1bW4yTnVtZXJpYwBnZXRfQ29sdW1uM051bWVyaWMAZGVmYXVs
dEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF92YXJJbkNT
VkZpbGVOYW1lAElucHV0TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBHZXREYXRlVGlt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBnZXRfQ29sdW1u
RGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAHNldF9WYWx1ZQBnZXRfdmFydGFibGV2YWx1ZQBzZXRfdmFydGFibGV2YWx1ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBHZXREZWNpbWFsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTQ185NDcxRDM2MTdEQ0U0NzZGQUFDM0MwMzdEQUU4N0ZGNS5kbGwAZ2V0X0NvbHVt
bjBfSXNOdWxsAGdldF9Db2x1bW4xX0lzTnVsbABnZXRfQ29sdW1uMl9Jc051bGwAZ2V0X0NvbHVt
bjNfSXNOdWxsAGdldF9Db2x1bW40X0lzTnVsbABnZXRfQ29sdW1uMU51bWVyaWNfSXNOdWxsAGdl
dF9Db2x1bW4yTnVtZXJpY19Jc051bGwAZ2V0X0NvbHVtbjNOdW1lcmljX0lzTnVsbABnZXRfQ29s
dW1uRGF0ZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
Z2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRfT0xFQ29ubmVjdGlvbgBnZXRfQURP
Q29ubmVjdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0
cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EVFNQaXBlbGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ185OWE5MjRlOTJlNzk0OWRh
YTQzOTkyMzI5MDU2M2MyMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU0NfOTlhOTI0ZTkyZTc5NDlkYWE0Mzk5MjMyOTA1NjNjMjAuUHJvcGVydGllcwBnZXRf
UmVhZFdyaXRlVmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAE9iamVjdABF
bmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0aENvbnRleHQA
U2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5wdXQwX1By
b2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAAAADMAAAD0kAbgBwAHUAdAAgADAA
ABtBAEQATwBDAG8AbgBuAGUAYwB0AGkAbwBuAAAbTwBMAEUAQwBvAG4AbgBlAGMAdABpAG8AbgAA
IXYAYQByAEkAbgBDAFMAVgBGAGkAbABlAE4AYQBtAGUAABt2AGEAcgB0AGEAYgBsAGUAdgBhAGwA
dQBlAABxUwBDAF8AOQA5AGEAOQAyADQAZQA5ADIAZQA3ADkANAA5AGQAYQBhADQAMwA5ADkAMgAz
ADIAOQAwADUANgAzAGMAMgAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAAABoGJMP5FD6Q4LHyXn4ZX5OAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFlCSADARI9
HQgSQQMGEj0DBh0IBCABDggEIAECCAUgARFFCAUgARFJCAMgAAIGIAICDhF5BSABHQgIBCAAEn0F
IAASgIEGIAESgIUOBCAAElUFIAASgIkGIAESgI0cBQAAEoCRBiABHBKAlQQgAQEcCAABEoCZEYCd
BSAAEoChByACAQ4SgKEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEk0DBhJdAwYSYQMGEiAF
IAEBEgwDIAAOBCAAEUUEIAARSQkgBAEIDhI9EkEFIAEBEk0EAAASXQQAABJhBQABARJhBAAAEiAD
AAABAygADgMoAAIEKAARRQQoABFJBCgAElUECAASXQQIABJhBAgAEiAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzk5YTkyNGU5MmU3OTQ5ZGFh
NDM5OTIzMjkwNTYzYzIwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC43BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA+DgAAAAAAAAAAAAAEjkAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAQ5AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA5ADkAYQA5ADIANABlADkAMgBlADcAOQA0ADkAZABhAGEANAAzADkAOQAyADMAMgA5ADAA
NQA2ADMAYwAyADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADkANAA3ADEARAAzADYA
MQA3AEQAQwBFADQANwA2AEYAQQBBAEMAMwBDADAAMwA3AEQAQQBFADgANwBGAEYANQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOQA0ADcA
MQBEADMANgAxADcARABDAEUANAA3ADYARgBBAEEAQwAzAEMAMAAzADcARABBAEUAOAA3AEYARgA1
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAOQBhADkA
MgA0AGUAOQAyAGUANwA5ADQAOQBkAGEAYQA0ADMAOQA5ADIAMwAyADkAMAA1ADYAMwBjADIAMAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAJDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_9471d3617dce476faac3c037dae87ff5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varInCSVFileName</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::vartablevalue</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">05e657dfb1c2093e0bb534da004a288c</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a1ad1e9c463ae68cfb6c42bf1d624ae9494cc63</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">E3</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Connections[ADOConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB]"
                      description="SQL Connect To Integration Database"
                      name="ADOConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Connections[OLEConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="OLEDB Connect To Integration Database"
                      name="OLEConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column 0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 0"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 1"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 2"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 3"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column 4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column 4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output].Columns[Column 4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column1Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column1Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column1Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column2Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column2Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column2Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column3Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column3Numeric"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column3Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0].Columns[Column_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output].Columns[Column_Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Customer Sentiment Table"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update customers_sentiments_tbl
set positive_fld = ?,
 negative_fld = ?,
neutral_fld = ?,
sentiment_datetime_fld=?
where sentiment_datetime_fld =?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TestDB.sa]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column1Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column1Numeric"
                          cachedPrecision="18"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column1Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column2Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column2Numeric"
                          cachedPrecision="18"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column2Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column3Numeric]"
                          cachedDataType="numeric"
                          cachedName="Column3Numeric"
                          cachedPrecision="18"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column3Numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].Columns[Column_Date1]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Column_Date1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output].Columns[Column_Date1]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="numeric"
                          name="Param_0"
                          precision="10"
                          scale="2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="numeric"
                          name="Param_1"
                          precision="10"
                          scale="2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="numeric"
                          name="Param_2"
                          precision="10"
                          scale="2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="dbTimeStamp"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="dbTimeStamp"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Case Insert]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Inputs[Data Conversion Input]"
                  name="Case Insert"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Case Insert]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Case Update]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Case Update"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Case Update]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Conditional Split Default Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Inputs[Derived Column Input]"
                  name="Conditional Split Default Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Error Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Inputs[Derived Column Input]"
                  name="Data Conversion Error Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Error Output1]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Inputs[Derived Column Input]"
                  name="Data Conversion Error Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Output1]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Inputs[OLE DB Command Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Output2]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag.Inputs[Input 0]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output10]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output9]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output8]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output7]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output6]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output5]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output4]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output3]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output2]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Flat File Source Error Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1.Inputs[Derived Column Input]"
                  name="Flat File Source Error Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split.Inputs[Conditional Split Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Inputs[OLE DB Command Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Error Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record.Inputs[Input 0]"
                  name="OLE DB Command Error Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Error Output1]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1.Inputs[Derived Column Input]"
                  name="OLE DB Command Error Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Output]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update.Inputs[Input 0]"
                  name="OLE DB Command Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Output1]"
                  endId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1.Inputs[Input 0]"
                  name="OLE DB Command Output"
                  startId="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table.Outputs[OLE DB Command Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Move File From Source Folder To In Process"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="Move File From Source Folder To In Process"
          DTS:DTSID="{E022BB9A-0320-4D38-B6F8-E39B37E51B5B}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move File From Source Folder To In Process"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::varInFilePathFromSource"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::varInProcFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Move Files To Arch Folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{40257320-1D6F-4EE4-841D-E436371FFC07}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Files To Arch Folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::varInFilePathFromInProc"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::varArchFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Move Files To Error Folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{1B0E2483-042A-44BF-A8B7-14BE0A9269DF}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Files To Error Folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::varInFilePathFromInProc"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::varErrFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Set vartablevalue to 0"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{EFE8DF15-5509-4E3E-98E4-16CA79076732}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set vartablevalue to 0"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::vartablevalue]=&quot;0&quot;" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{3A94D0C1-0F33-4E40-8E8D-98C7B2DFB6F6}"
          DTS:From="Package\Foreach Loop Container\Move File From Source Folder To In Process"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Set vartablevalue to 0" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{3C33FF41-E74E-4450-9A8B-521EA4F5B52C}"
          DTS:From="Package\Foreach Loop Container\Set vartablevalue to 0"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Ingest The CSV File - Flow" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{A4BA28D7-888B-403A-9309-18D11DAAC951}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vartablevalue]==&quot;0&quot;"
          DTS:From="Package\Foreach Loop Container\Ingest The CSV File - Flow"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Move Files To Arch Folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{A3A5E3E0-393C-42EE-8CC8-E92AC1143F0E}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vartablevalue]==&quot;1&quot;"
          DTS:From="Package\Foreach Loop Container\Ingest The CSV File - Flow"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Move Files To Error Folder" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{18EDD9F4-C8BD-49FD-B4A9-3B6815084674}"
          DTS:ObjectName="{18EDD9F4-C8BD-49FD-B4A9-3B6815084674}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varInCSVFileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="210,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow"
          TopLeft="66,153" />
        <NodeLayout
          Size="163,54"
          Id="Package\Foreach Loop Container\Move File From Source Folder To In Process"
          TopLeft="62,26" />
        <NodeLayout
          Size="208,42"
          Id="Package\Foreach Loop Container\Move Files To Arch Folder"
          TopLeft="361,263" />
        <NodeLayout
          Size="209,42"
          Id="Package\Foreach Loop Container\Move Files To Error Folder"
          TopLeft="64,272" />
        <NodeLayout
          Size="185,42"
          Id="Package\Foreach Loop Container\Set vartablevalue to 0"
          TopLeft="394,58" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="225,53">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169,26"
              Start="0,0"
              End="161.5,26">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="80.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="80.5,0"
                    Point2="84.5,0"
                    Point3="84.5,4" />
                  <mssgle:LineSegment
                    End="84.5,22" />
                  <mssgle:CubicBezierSegment
                    Point1="84.5,22"
                    Point2="84.5,26"
                    Point3="88.5,26" />
                  <mssgle:LineSegment
                    End="161.5,26" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="486.5,100">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-315.5,53"
              Start="0,0"
              End="-315.5,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="-4,26.5" />
                  <mssgle:LineSegment
                    End="-311.5,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-311.5,26.5"
                    Point2="-315.5,26.5"
                    Point3="-315.5,30.5" />
                  <mssgle:LineSegment
                    End="-315.5,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="204.666666666667,195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="260.333333333333,68"
              Start="0,0"
              End="260.333333333333,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5085066162571" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.5085066162571"
                    Point2="0,27.5085066162571"
                    Point3="4,27.5085066162571" />
                  <mssgle:LineSegment
                    End="256.333333333333,27.5085066162571" />
                  <mssgle:CubicBezierSegment
                    Point1="256.333333333333,27.5085066162571"
                    Point2="260.333333333333,27.5085066162571"
                    Point3="260.333333333333,31.5085066162571" />
                  <mssgle:LineSegment
                    End="260.333333333333,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="122.166666666666,32.5085066162571,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="137.333333333333,195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31.1666666666667,77"
              Start="0,0"
              End="31.1666666666667,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1493383742911" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.1493383742911"
                    Point2="0,31.1493383742911"
                    Point3="4,31.1493383742911" />
                  <mssgle:LineSegment
                    End="27.1666666666667,31.1493383742911" />
                  <mssgle:CubicBezierSegment
                    Point1="27.1666666666667,31.1493383742911"
                    Point2="31.1666666666667,31.1493383742911"
                    Point3="31.1666666666667,35.1493383742911" />
                  <mssgle:LineSegment
                    End="31.1666666666667,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="7.58333333333335,36.1493383742911,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="584,369"
          Size="584,412"
          Id="Package\Foreach Loop Container"
          TopLeft="309,46" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Ingest The CSV File - Flow">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="235,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 2"
          TopLeft="1101.14285714286,262.857142857143" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion"
          TopLeft="649.857142857143,388.285714285714" />
        <NodeLayout
          Size="300,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String"
          TopLeft="562,14.4285714285714" />
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Flat File Source"
          TopLeft="100.428571428571,162" />
        <NodeLayout
          Size="189,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update 1"
          TopLeft="323,765" />
        <NodeLayout
          Size="235,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1 1"
          TopLeft="460.428571428571,664.142857142857" />
        <NodeLayout
          Size="202,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Already Exists Error"
          TopLeft="115.714285714286,787.142857142857" />
        <NodeLayout
          Size="300,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 2"
          TopLeft="1200,339.285714285715" />
        <NodeLayout
          Size="235,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1 1"
          TopLeft="741.428571428571,508.714285714286" />
        <NodeLayout
          Size="180,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Success Full Update"
          TopLeft="1021,510" />
        <NodeLayout
          Size="186,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error"
          TopLeft="1067.85714285714,630.142857142857" />
        <NodeLayout
          Size="164,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert Table Error"
          TopLeft="936.57142857143,742.714285714286" />
        <NodeLayout
          Size="170,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Convert To Integer 1"
          TopLeft="1184.28571428571,120" />
        <NodeLayout
          Size="186,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data conversion Error 1"
          TopLeft="1526.85714285714,411.285714285714" />
        <NodeLayout
          Size="235,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 1"
          TopLeft="220.285714285714,61.2857142857143" />
        <NodeLayout
          Size="255,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Insert In  Customer Sentiment Table"
          TopLeft="402,471" />
        <NodeLayout
          Size="192,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in the Status Flag"
          TopLeft="1376.57142857143,159.142857142857" />
        <NodeLayout
          Size="300,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2 1"
          TopLeft="558.714285714286,743.571428571429" />
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Conditional Split"
          TopLeft="510,204.428571428571" />
        <NodeLayout
          Size="226,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time"
          TopLeft="517,105.428571428571" />
        <NodeLayout
          Size="170,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Data Conversion 1"
          TopLeft="898.571428571429,187.142857142857" />
        <NodeLayout
          Size="212,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error in updating the record"
          TopLeft="1306,465.142857142857" />
        <NodeLayout
          Size="309,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 2"
          TopLeft="611.714285714286,616.571428571429" />
        <NodeLayout
          Size="235,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Get File Name And Date Time 2"
          TopLeft="60.1428571428571,433.142857142857" />
        <NodeLayout
          Size="273,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Error In CSV File Script Write To Err DB"
          TopLeft="1291.21428571429,49.7857142857143" />
        <NodeLayout
          Size="309,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Messgae Column To String From Wide String 1"
          TopLeft="6.57142857142853,605.285714285714" />
        <NodeLayout
          Size="223,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists"
          TopLeft="179,281.428571428571" />
        <NodeLayout
          Size="248,42"
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow\Update Customer Sentiment Table"
          TopLeft="902.428571428571,370.285714285714" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Output1]"
          TopLeft="488.333333333333,513">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-70.8333333333333,252"
              Start="0,0"
              End="-70.8333333333333,244.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,97.742790335152" />
                  <mssgle:CubicBezierSegment
                    Point1="0,97.742790335152"
                    Point2="0,101.742790335152"
                    Point3="-4,101.742790335152" />
                  <mssgle:LineSegment
                    End="-66.8333333333333,101.742790335152" />
                  <mssgle:CubicBezierSegment
                    Point1="-66.8333333333333,101.742790335152"
                    Point2="-70.8333333333333,101.742790335152"
                    Point3="-70.8333333333333,105.742790335152" />
                  <mssgle:LineSegment
                    End="-70.8333333333333,244.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Output]"
          TopLeft="986.428571428571,412.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="124.571428571429,97.714285714286"
              Start="0,0"
              End="124.571428571429,90.214285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.4615384615386" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.4615384615386"
                    Point2="0,39.4615384615386"
                    Point3="4,39.4615384615386" />
                  <mssgle:LineSegment
                    End="120.571428571429,39.4615384615386" />
                  <mssgle:CubicBezierSegment
                    Point1="120.571428571429,39.4615384615386"
                    Point2="124.571428571429,39.4615384615386"
                    Point3="124.571428571429,43.4615384615386" />
                  <mssgle:LineSegment
                    End="124.571428571429,90.214285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Error Output1]"
          TopLeft="574.297619047619,513">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,151.142857142857"
              Start="0,0"
              End="0,143.642857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,143.642857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.70890625,66.0167410714285,141.4178125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[OLE DB Command Error Output]"
          TopLeft="1066.42857142857,412.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="345.571428571429,52.857142857143"
              Start="0,0"
              End="345.571428571429,45.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.3461538461539" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.3461538461539"
                    Point2="0,21.3461538461539"
                    Point3="4,21.3461538461539" />
                  <mssgle:LineSegment
                    End="341.571428571429,21.3461538461539" />
                  <mssgle:CubicBezierSegment
                    Point1="341.571428571429,21.3461538461539"
                    Point2="345.571428571429,21.3461538461539"
                    Point3="345.571428571429,25.3461538461539" />
                  <mssgle:LineSegment
                    End="345.571428571429,45.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="102.076808035715,26.3461538461539,141.4178125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Lookup No Match Output]"
          TopLeft="290.5,323.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="239,147.571428571429"
              Start="0,0"
              End="239,140.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.7857142857145" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.7857142857145"
                    Point2="0,73.7857142857145"
                    Point3="4,73.7857142857145" />
                  <mssgle:LineSegment
                    End="235,73.7857142857145" />
                  <mssgle:CubicBezierSegment
                    Point1="235,73.7857142857145"
                    Point2="239,73.7857142857145"
                    Point3="239,77.7857142857145" />
                  <mssgle:LineSegment
                    End="239,140.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="63.69361328125,78.7857142857145,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Lookup Match Output]"
          TopLeft="236.75,323.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-59.1071428571429,109.714285714286"
              Start="0,0"
              End="-59.1071428571429,102.214285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.4357459379617" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.4357459379617"
                    Point2="0,37.4357459379617"
                    Point3="-4,37.4357459379617" />
                  <mssgle:LineSegment
                    End="-55.1071428571429,37.4357459379617" />
                  <mssgle:CubicBezierSegment
                    Point1="-55.1071428571429,37.4357459379617"
                    Point2="-59.1071428571429,37.4357459379617"
                    Point3="-59.1071428571429,41.4357459379617" />
                  <mssgle:LineSegment
                    End="-59.1071428571429,102.214285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-77.7449581473215,42.4357459379617,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Flat File Source Output]"
          TopLeft="256.428571428571,183">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="253.571428571429,42.428571428571"
              Start="0,0"
              End="246.071428571429,42.428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="122.785714285715,0" />
                  <mssgle:CubicBezierSegment
                    Point1="122.785714285715,0"
                    Point2="126.785714285715,0"
                    Point3="126.785714285715,4" />
                  <mssgle:LineSegment
                    End="126.785714285715,38.428571428571" />
                  <mssgle:CubicBezierSegment
                    Point1="126.785714285715,38.428571428571"
                    Point2="126.785714285715,42.428571428571"
                    Point3="130.785714285715,42.428571428571" />
                  <mssgle:LineSegment
                    End="246.071428571429,42.428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Flat File Source Error Output]"
          TopLeft="178.428571428571,162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="159.357142857143,-58.7142857142857"
              Start="0,0"
              End="159.357142857143,-51.2142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-25.3571428571429" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-25.3571428571429"
                    Point2="0,-29.3571428571429"
                    Point3="4,-29.3571428571429" />
                  <mssgle:LineSegment
                    End="155.357142857143,-29.3571428571429" />
                  <mssgle:CubicBezierSegment
                    Point1="155.357142857143,-29.3571428571429"
                    Point2="159.357142857143,-29.3571428571429"
                    Point3="159.357142857143,-33.3571428571429" />
                  <mssgle:LineSegment
                    End="159.357142857143,-51.2142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.0521847098215,-24.3571428571429,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output10]"
          TopLeft="161.071428571429,647.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.6428571428574,139.857142857143"
              Start="0,0"
              End="55.6428571428574,132.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.9285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,65.9285714285714"
                    Point2="0,69.9285714285714"
                    Point3="4,69.9285714285714" />
                  <mssgle:LineSegment
                    End="51.6428571428574,69.9285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="51.6428571428574,69.9285714285714"
                    Point2="55.6428571428574,69.9285714285714"
                    Point3="55.6428571428574,73.9285714285714" />
                  <mssgle:LineSegment
                    End="55.6428571428574,132.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output9]"
          TopLeft="177.642857142857,475.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.5714285714286,130.142857142857"
              Start="0,0"
              End="-16.5714285714286,122.642857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.0714285714287" />
                  <mssgle:CubicBezierSegment
                    Point1="0,61.0714285714287"
                    Point2="0,65.0714285714287"
                    Point3="-4,65.0714285714287" />
                  <mssgle:LineSegment
                    End="-12.5714285714286,65.0714285714287" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.5714285714286,65.0714285714287"
                    Point2="-16.5714285714286,65.0714285714287"
                    Point3="-16.5714285714286,69.0714285714287" />
                  <mssgle:LineSegment
                    End="-16.5714285714286,122.642857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output8]"
          TopLeft="858.928571428571,550.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-92.714285714285,65.857142857143"
              Start="0,0"
              End="-92.714285714285,58.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.9285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.9285714285715"
                    Point2="0,32.9285714285715"
                    Point3="-4,32.9285714285715" />
                  <mssgle:LineSegment
                    End="-88.714285714285,32.9285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="-88.714285714285,32.9285714285715"
                    Point2="-92.714285714285,32.9285714285715"
                    Point3="-92.714285714285,36.9285714285715" />
                  <mssgle:LineSegment
                    End="-92.714285714285,58.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output7]"
          TopLeft="455.285714285714,82.2857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.714285714286,-46.8571428571428"
              Start="0,0"
              End="99.2142857142857,-46.8571428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.3571428571428,0" />
                  <mssgle:CubicBezierSegment
                    Point1="49.3571428571428,0"
                    Point2="53.3571428571428,0"
                    Point3="53.3571428571428,-4" />
                  <mssgle:LineSegment
                    End="53.3571428571428,-42.8571428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="53.3571428571428,-42.8571428571428"
                    Point2="53.3571428571428,-46.8571428571428"
                    Point3="57.3571428571428,-46.8571428571428" />
                  <mssgle:LineSegment
                    End="99.2142857142857,-46.8571428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output6]"
          TopLeft="577.928571428571,706.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="130.785714285715,37.428571428572"
              Start="0,0"
              End="130.785714285715,29.928571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.714285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.714285714286"
                    Point2="0,18.714285714286"
                    Point3="4,18.714285714286" />
                  <mssgle:LineSegment
                    End="126.785714285715,18.714285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="126.785714285715,18.714285714286"
                    Point2="130.785714285715,18.714285714286"
                    Point3="130.785714285715,22.714285714286" />
                  <mssgle:LineSegment
                    End="130.785714285715,29.928571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output5]"
          TopLeft="920.714285714286,637.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="147.142857142854,13.571428571428"
              Start="0,0"
              End="139.642857142854,13.571428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="69.571428571427,0" />
                  <mssgle:CubicBezierSegment
                    Point1="69.571428571427,0"
                    Point2="73.571428571427,0"
                    Point3="73.571428571427,4" />
                  <mssgle:LineSegment
                    End="73.571428571427,9.57142857142799" />
                  <mssgle:CubicBezierSegment
                    Point1="73.571428571427,9.57142857142799"
                    Point2="73.571428571427,13.571428571428"
                    Point3="77.571428571427,13.571428571428" />
                  <mssgle:LineSegment
                    End="139.642857142854,13.571428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output4]"
          TopLeft="858.714285714286,764.142857142858">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.857142857144,0"
              Start="0,0"
              End="70.357142857144,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="70.357142857144,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output3]"
          TopLeft="1218.64285714286,304.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="131.357142857144,34.4285714285716"
              Start="0,0"
              End="131.357142857144,26.9285714285716">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.2142857142858" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.2142857142858"
                    Point2="0,17.2142857142858"
                    Point3="4,17.2142857142858" />
                  <mssgle:LineSegment
                    End="127.357142857144,17.2142857142858" />
                  <mssgle:CubicBezierSegment
                    Point1="127.357142857144,17.2142857142858"
                    Point2="131.357142857144,17.2142857142858"
                    Point3="131.357142857144,21.2142857142858" />
                  <mssgle:LineSegment
                    End="131.357142857144,26.9285714285716" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output2]"
          TopLeft="862,35.4285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="429.21428571429,35.3571428571429"
              Start="0,0"
              End="421.71428571429,35.3571428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="210.607142857145,0" />
                  <mssgle:CubicBezierSegment
                    Point1="210.607142857145,0"
                    Point2="214.607142857145,0"
                    Point3="214.607142857145,4" />
                  <mssgle:LineSegment
                    End="214.607142857145,31.3571428571429" />
                  <mssgle:CubicBezierSegment
                    Point1="214.607142857145,31.3571428571429"
                    Point2="214.607142857145,35.3571428571429"
                    Point3="218.607142857145,35.3571428571429" />
                  <mssgle:LineSegment
                    End="421.71428571429,35.3571428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output1]"
          TopLeft="743,126.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="441.285714285714,14.5714285714289"
              Start="0,0"
              End="433.785714285714,14.5714285714289">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="216.642857142857,0" />
                  <mssgle:CubicBezierSegment
                    Point1="216.642857142857,0"
                    Point2="220.642857142857,0"
                    Point3="220.642857142857,4" />
                  <mssgle:LineSegment
                    End="220.642857142857,10.5714285714289" />
                  <mssgle:CubicBezierSegment
                    Point1="220.642857142857,10.5714285714289"
                    Point2="220.642857142857,14.5714285714289"
                    Point3="224.642857142857,14.5714285714289" />
                  <mssgle:LineSegment
                    End="433.785714285714,14.5714285714289" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Derived Column Output]"
          TopLeft="1350,381.285714285715">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="269.857142857143,29.9999999999996"
              Start="0,0"
              End="269.857142857143,22.4999999999996">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.9999999999998" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.9999999999998"
                    Point2="0,14.9999999999998"
                    Point3="4,14.9999999999998" />
                  <mssgle:LineSegment
                    End="265.857142857143,14.9999999999998" />
                  <mssgle:CubicBezierSegment
                    Point1="265.857142857143,14.9999999999998"
                    Point2="269.857142857143,14.9999999999998"
                    Point3="269.857142857143,18.9999999999998" />
                  <mssgle:LineSegment
                    End="269.857142857143,22.4999999999996" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Output2]"
          TopLeft="1354.28571428571,136.642857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="118.285714285714,22.5"
              Start="0,0"
              End="118.285714285714,15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="114.285714285714,0" />
                  <mssgle:CubicBezierSegment
                    Point1="114.285714285714,0"
                    Point2="118.285714285714,0"
                    Point3="118.285714285714,4" />
                  <mssgle:LineSegment
                    End="118.285714285714,15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Output1]"
          TopLeft="956.571428571429,229.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69.8571428571421,141.142857142857"
              Start="0,0"
              End="69.8571428571421,133.642857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.2467532467532" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.2467532467532"
                    Point2="0,57.2467532467532"
                    Point3="4,57.2467532467532" />
                  <mssgle:LineSegment
                    End="65.8571428571421,57.2467532467532" />
                  <mssgle:CubicBezierSegment
                    Point1="65.8571428571421,57.2467532467532"
                    Point2="69.8571428571421,57.2467532467532"
                    Point3="69.8571428571421,61.2467532467532" />
                  <mssgle:LineSegment
                    End="69.8571428571421,133.642857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Output]"
          TopLeft="704.857142857143,388.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-360.607142857143,-64.857142857143"
              Start="0,0"
              End="-360.607142857143,-57.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-32.8910671014995" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-32.8910671014995"
                    Point2="0,-36.8910671014995"
                    Point3="-4,-36.8910671014995" />
                  <mssgle:LineSegment
                    End="-356.607142857143,-36.8910671014995" />
                  <mssgle:CubicBezierSegment
                    Point1="-356.607142857143,-36.8910671014995"
                    Point2="-360.607142857143,-36.8910671014995"
                    Point3="-360.607142857143,-40.8910671014995" />
                  <mssgle:LineSegment
                    End="-360.607142857143,-57.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Error Output1]"
          TopLeft="1010.57142857143,229.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208.071428571428,33.7142857142858"
              Start="0,0"
              End="208.071428571428,26.2142857142858">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.6743256743257" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.6743256743257"
                    Point2="0,13.6743256743257"
                    Point3="4,13.6743256743257" />
                  <mssgle:LineSegment
                    End="204.071428571428,13.6743256743257" />
                  <mssgle:CubicBezierSegment
                    Point1="204.071428571428,13.6743256743257"
                    Point2="208.071428571428,13.6743256743257"
                    Point3="208.071428571428,17.6743256743257" />
                  <mssgle:LineSegment
                    End="208.071428571428,26.2142857142858" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="37.949327566964,18.6743256743257,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Data Conversion Error Output]"
          TopLeft="730.357142857143,430.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="128.571428571428,78.428571428572"
              Start="0,0"
              End="128.571428571428,70.928571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.214285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.214285714286"
                    Point2="0,39.214285714286"
                    Point3="4,39.214285714286" />
                  <mssgle:LineSegment
                    End="124.571428571428,39.214285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="124.571428571428,39.214285714286"
                    Point2="128.571428571428,39.214285714286"
                    Point3="128.571428571428,43.214285714286" />
                  <mssgle:LineSegment
                    End="128.571428571428,70.928571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1.800672433036,44.214285714286,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Conditional Split Default Output]"
          TopLeft="589.5,204.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.5,-57"
              Start="0,0"
              End="40.5,-49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-24.5"
                    Point2="0,-28.5"
                    Point3="4,-28.5" />
                  <mssgle:LineSegment
                    End="36.5,-28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="36.5,-28.5"
                    Point2="40.5,-28.5"
                    Point3="40.5,-32.5" />
                  <mssgle:LineSegment
                    End="40.5,-49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-50.36390625,-23.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Case Update]"
          TopLeft="669,225.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="229.571428571429,-17.2857142857139"
              Start="0,0"
              End="222.071428571429,-17.2857142857139">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="110.785714285714,0" />
                  <mssgle:CubicBezierSegment
                    Point1="110.785714285714,0"
                    Point2="114.785714285714,0"
                    Point3="114.785714285714,-4" />
                  <mssgle:LineSegment
                    End="114.785714285714,-13.2857142857139" />
                  <mssgle:CubicBezierSegment
                    Point1="114.785714285714,-13.2857142857139"
                    Point2="114.785714285714,-17.2857142857139"
                    Point3="118.785714285714,-17.2857142857139" />
                  <mssgle:LineSegment
                    End="222.071428571429,-17.2857142857139" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="86.286847098214,1,56.997734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Ingest The CSV File - Flow.Paths[Case Insert]"
          TopLeft="589.5,246.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="166.357142857143,141.857142857143"
              Start="0,0"
              End="166.357142857143,134.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.2767527675278" />
                  <mssgle:CubicBezierSegment
                    Point1="0,80.2767527675278"
                    Point2="0,84.2767527675278"
                    Point3="4,84.2767527675278" />
                  <mssgle:LineSegment
                    End="162.357142857143,84.2767527675278" />
                  <mssgle:CubicBezierSegment
                    Point1="162.357142857143,84.2767527675278"
                    Point2="166.357142857143,84.2767527675278"
                    Point3="166.357142857143,88.2767527675278" />
                  <mssgle:LineSegment
                    End="166.357142857143,134.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="57.3046651785715,89.2767527675278,51.7478125,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Ingest The CSV File - Flow\Check if record already exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[customers_sentiments_tbl]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>